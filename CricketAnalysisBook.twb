<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
        <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
        <aliases>
          <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
          <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
          <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
          <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
          <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
          <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
          <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
          <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
          <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
          <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
          <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
          <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
          <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
          <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
          <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
          <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
          <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
          <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
          <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
          <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
          <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
          <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
          <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
          <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
          <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
          <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
          <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
          <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
          <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
        </aliases>
        <members>
          <member alias='Aaron Finch' value='&quot;Aaron Finch(c)&quot;' />
          <member value='&quot;Aayan Afzal Khan&quot;' />
          <member value='&quot;Adam Zampa&quot;' />
          <member value='&quot;Afif Hossain&quot;' />
          <member value='&quot;Aiden Markram&quot;' />
          <member value='&quot;Akeal Hosein&quot;' />
          <member value='&quot;Alex Hales&quot;' />
          <member value='&quot;Alishan Sharafu&quot;' />
          <member value='&quot;Alzarri Joseph&quot;' />
          <member alias='Andy Balbirnie' value='&quot;Andy Balbirnie(c)&quot;' />
          <member value='&quot;Anrich Nortje&quot;' />
          <member value='&quot;Arshdeep Singh&quot;' />
          <member value='&quot;Aryan Lakra&quot;' />
          <member value='&quot;Asif Ali&quot;' />
          <member value='&quot;Axar Patel&quot;' />
          <member value='&quot;Azmatullah Omarzai&quot;' />
          <member value='&quot;Babar Azam(c)&quot;' />
          <member value='&quot;Barry McCarthy&quot;' />
          <member value='&quot;Bas de Leede&quot;' />
          <member value='&quot;Basil Hameed&quot;' />
          <member value='&quot;Ben Stokes&quot;' />
          <member value='&quot;Bernard Scholtz&quot;' />
          <member value='&quot;Bhanuka Rajapaksa&quot;' />
          <member value='&quot;Bhuvneshwar Kumar&quot;' />
          <member value='&quot;Blessing Muzarabani&quot;' />
          <member value='&quot;Brad Evans&quot;' />
          <member value='&quot;Brandon King&quot;' />
          <member value='&quot;Calum MacLeod&quot;' />
          <member value='&quot;Cameron Green&quot;' />
          <member value='&quot;Chamika Karunaratne&quot;' />
          <member value='&quot;Charith Asalanka&quot;' />
          <member value='&quot;Chirag Suri&quot;' />
          <member value='&quot;Chris Greaves&quot;' />
          <member value='&quot;Chris Woakes&quot;' />
          <member alias='Chundangapoyil Rizwan' value='&quot;Chundangapoyil Rizwan(c)&quot;' />
          <member value='&quot;Colin Ackermann&quot;' />
          <member alias='Craig Ervine' value='&quot;Craig Ervine(c)&quot;' />
          <member value='&quot;Curtis Campher&quot;' />
          <member value='&quot;Danushka Gunathilaka&quot;' />
          <member value='&quot;Darwish Rasooli&quot;' />
          <member value='&quot;Daryl Mitchell&quot;' />
          <member alias='Dasun Shanaka' value='&quot;Dasun Shanaka(c)&quot;' />
          <member value='&quot;David Miller&quot;' />
          <member value='&quot;David Warner&quot;' />
          <member value='&quot;David Wiese&quot;' />
          <member value='&quot;Dawid Malan&quot;' />
          <member value='&quot;Deepak Hooda&quot;' />
          <member alias='Devon Conway' value='&quot;Devon Conwayâ€&quot;' />
          <member value='&quot;Dhananjaya de Silva&quot;' />
          <member alias='Dinesh Karthik' value='&quot;Dinesh Karthikâ€&quot;' />
          <member value='&quot;Divan la Cock&quot;' />
          <member value='&quot;Dushmantha Chameera&quot;' />
          <member value='&quot;Evin Lewis&quot;' />
          <member value='&quot;Fakhar Zaman&quot;' />
          <member value='&quot;Fareed Ahmad&quot;' />
          <member value='&quot;Fazalhaq Farooqi&quot;' />
          <member value='&quot;Finn Allen&quot;' />
          <member value='&quot;Fionn Hand&quot;' />
          <member value='&quot;Fred Klaassen&quot;' />
          <member value='&quot;Gareth Delany&quot;' />
          <member value='&quot;George Dockrell&quot;' />
          <member value='&quot;George Munsey&quot;' />
          <member alias='Gerhard Erasmus' value='&quot;Gerhard Erasmus(c)&quot;' />
          <member value='&quot;Glenn Maxwell&quot;' />
          <member value='&quot;Glenn Phillips&quot;' />
          <member value='&quot;Gulbadin Naib&quot;' />
          <member value='&quot;Haider Ali&quot;' />
          <member value='&quot;Hardik Pandya&quot;' />
          <member value='&quot;Haris Rauf&quot;' />
          <member value='&quot;Harry Brook&quot;' />
          <member value='&quot;Harry Tector&quot;' />
          <member value='&quot;Hasan Mahmud&quot;' />
          <member value='&quot;Hazratullah Zazai&quot;' />
          <member value='&quot;Heinrich Klaasen&quot;' />
          <member value='&quot;Ibrahim Zadran&quot;' />
          <member value='&quot;Iftikhar Ahmed&quot;' />
          <member value='&quot;Ish Sodhi&quot;' />
          <member value='&quot;James Neesham&quot;' />
          <member value='&quot;Jan Frylinck&quot;' />
          <member value='&quot;Jan Nicol Loftie-Eaton&quot;' />
          <member value='&quot;Jason Holder&quot;' />
          <member value='&quot;JJ Smit&quot;' />
          <member value='&quot;Johnson Charles&quot;' />
          <member alias='Jos Buttler' value='&quot;Jos Buttler(c)â€&quot;' />
          <member value='&quot;Josh Davey&quot;' />
          <member value='&quot;Josh Hazlewood&quot;' />
          <member value='&quot;Josh Little&quot;' />
          <member value='&quot;Junaid Siddique&quot;' />
          <member value='&quot;Kagiso Rabada&quot;' />
          <member value='&quot;Kane Richardson&quot;' />
          <member alias='Kane Williamson' value='&quot;Kane Williamson(c)&quot;' />
          <member value='&quot;Karthik Meiyappan&quot;' />
          <member value='&quot;Kashif Daud&quot;' />
          <member value='&quot;Kasun Rajitha&quot;' />
          <member value='&quot;Keshav Maharaj&quot;' />
          <member value='&quot;KL Rahul&quot;' />
          <member alias='Kusal Mendis' value='&quot;Kusal Mendisâ€&quot;' />
          <member value='&quot;Kyle Mayers&quot;' />
          <member value='&quot;Lahiru Kumara&quot;' />
          <member value='&quot;Liam Livingstone&quot;' />
          <member value='&quot;Litton Das&quot;' />
          <member value='&quot;Logan van Beek&quot;' />
          <member alias='Lorcan Tucker' value='&quot;Lorcan Tuckerâ€&quot;' />
          <member value='&quot;Luke Jongwe&quot;' />
          <member value='&quot;Lungi Ngidi&quot;' />
          <member value='&quot;Maheesh Theekshana&quot;' />
          <member value='&quot;Marcus Stoinis&quot;' />
          <member value='&quot;Mark Adair&quot;' />
          <member alias='Matthew Cross' value='&quot;Matthew Crossâ€&quot;' />
          <member alias='Matthew Wade(c)' value='&quot;Matthew Wade(c)â€&quot;' />
          <member alias='Matthew Wade' value='&quot;Matthew Wadeâ€&quot;' />
          <member value='&quot;Max O&apos;Dowd&quot;' />
          <member value='&quot;Mehidy Hasan Miraz&quot;' />
          <member value='&quot;Michael Jones&quot;' />
          <member value='&quot;Michael Leask&quot;' />
          <member value='&quot;Michael van Lingen&quot;' />
          <member value='&quot;Milton Shumba&quot;' />
          <member value='&quot;Mitchell Marsh&quot;' />
          <member value='&quot;Mitchell Santner&quot;' />
          <member value='&quot;Mitchell Starc&quot;' />
          <member value='&quot;Moeen Ali&quot;' />
          <member value='&quot;Mohammad Haris&quot;' />
          <member alias='Mohammad Nabi' value='&quot;Mohammad Nabi(c)&quot;' />
          <member value='&quot;Mohammad Nawaz&quot;' />
          <member alias='Mohammad Rizwan' value='&quot;Mohammad Rizwanâ€&quot;' />
          <member value='&quot;Mohammad Wasim&quot;' />
          <member value='&quot;Mohammed Shami&quot;' />
          <member value='&quot;Mosaddek Hossain&quot;' />
          <member value='&quot;Muhammad Waseem&quot;' />
          <member value='&quot;Mujeeb Ur Rahman&quot;' />
          <member value='&quot;Mustafizur Rahman&quot;' />
          <member value='&quot;Najibullah Zadran&quot;' />
          <member value='&quot;Najmul Hossain Shanto&quot;' />
          <member value='&quot;Naseem Shah&quot;' />
          <member value='&quot;Nasum Ahmed&quot;' />
          <member value='&quot;Naveen-ul-Haq&quot;' />
          <member alias='Nicholas Pooran' value='&quot;Nicholas Pooran(c)â€&quot;' />
          <member value='&quot;Nurul Hasanâ€&quot;' />
          <member value='&quot;Obed McCoy&quot;' />
          <member value='&quot;Odean Smith&quot;' />
          <member value='&quot;Pat Cummins&quot;' />
          <member value='&quot;Pathum Nissanka&quot;' />
          <member value='&quot;Paul Stirling&quot;' />
          <member value='&quot;Paul van Meekeren&quot;' />
          <member value='&quot;Phil Salt&quot;' />
          <member value='&quot;Pramod Madushan&quot;' />
          <member alias='Quinton de Kock' value='&quot;Quinton de Kockâ€&quot;' />
          <member alias='Rahmanullah Gurbaz' value='&quot;Rahmanullah Gurbazâ€&quot;' />
          <member value='&quot;Rashid Khan&quot;' />
          <member value='&quot;Ravichandran Ashwin&quot;' />
          <member alias='Regis Chakabva(c)' value='&quot;Regis Chakabva(c)â€&quot;' />
          <member alias='Regis Chakabva' value='&quot;Regis Chakabvaâ€&quot;' />
          <member value='&quot;Richard Ngarava&quot;' />
          <member alias='Richie Berrington' value='&quot;Richie Berrington(c)&quot;' />
          <member value='&quot;Rilee Rossouw&quot;' />
          <member alias='Rishabh Pant' value='&quot;Rishabh Pantâ€&quot;' />
          <member value='&quot;Roelof van der Merwe&quot;' />
          <member alias='Rohit Sharma' value='&quot;Rohit Sharma(c)&quot;' />
          <member value='&quot;Rovman Powell&quot;' />
          <member value='&quot;Ruben Trumpelmann&quot;' />
          <member value='&quot;Ryan Burl&quot;' />
          <member value='&quot;Sam Curran&quot;' />
          <member alias='Scott Edwards' value='&quot;Scott Edwards(c)â€&quot;' />
          <member value='&quot;Sean Williams&quot;' />
          <member value='&quot;Shadab Khan&quot;' />
          <member value='&quot;Shaheen Shah Afridi&quot;' />
          <member alias='Shakib Al Hasan' value='&quot;Shakib Al Hasan(c)&quot;' />
          <member value='&quot;Shamarh Brooks&quot;' />
          <member value='&quot;Shan Masood&quot;' />
          <member value='&quot;Shariz Ahmad&quot;' />
          <member value='&quot;Sikandar Raza&quot;' />
          <member value='&quot;Simi Singh&quot;' />
          <member value='&quot;Soumya Sarkar&quot;' />
          <member value='&quot;Stephan Baard&quot;' />
          <member value='&quot;Stephan Myburgh&quot;' />
          <member value='&quot;Steven Smith&quot;' />
          <member value='&quot;Suryakumar Yadav&quot;' />
          <member value='&quot;Tabraiz Shamsi&quot;' />
          <member value='&quot;Taskin Ahmed&quot;' />
          <member value='&quot;Temba Bavuma(c)&quot;' />
          <member value='&quot;Tendai Chatara&quot;' />
          <member value='&quot;Tim David&quot;' />
          <member value='&quot;Tim Pringle&quot;' />
          <member value='&quot;Tim Southee&quot;' />
          <member value='&quot;Timm van der Gugten&quot;' />
          <member value='&quot;Tom Cooper&quot;' />
          <member value='&quot;Tony Munyonga&quot;' />
          <member value='&quot;Tristan Stubbs&quot;' />
          <member value='&quot;Usman Ghani&quot;' />
          <member value='&quot;Vikramjit Singh&quot;' />
          <member value='&quot;Virat Kohli&quot;' />
          <member alias='Vriitya Aravind' value='&quot;Vriitya Aravindâ€&quot;' />
          <member value='&quot;Wanindu Hasaranga de Silva&quot;' />
          <member value='&quot;Wayne Parnell&quot;' />
          <member value='&quot;Wellington Masakadza&quot;' />
          <member value='&quot;Wessly Madhevere&quot;' />
          <member value='&quot;Yasir Ali&quot;' />
          <member value='&quot;Zahoor Khan&quot;' />
          <member alias='Zane Green' value='&quot;Zane Greenâ€&quot;' />
          <member value='&quot;Zawar Farid&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_batting+' inline='true' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_batting' name='textscan.18nx1bo0klsh8n12dd4b616miq5q'>
            <connection class='textscan' directory='C:/Users/Iamsc/OneDrive/Desktop/Cricket Data Analyst Project/archive' filename='df_batting.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_players.csv' table='[df_players#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='name' ordinal='0' />
              <column datatype='string' name='team' ordinal='1' />
              <column datatype='string' name='image' ordinal='2' />
              <column datatype='string' name='battingStyle' ordinal='3' />
              <column datatype='string' name='bowlingStyle' ordinal='4' />
              <column datatype='string' name='playingRole' ordinal='5' />
              <column datatype='string' name='description' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_batting.csv' table='[df_batting#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='match' ordinal='0' />
              <column datatype='string' name='teamInnings' ordinal='1' />
              <column datatype='integer' name='battingPos' ordinal='2' />
              <column datatype='string' name='batsmanName' ordinal='3' />
              <column datatype='integer' name='runs' ordinal='4' />
              <column datatype='integer' name='balls' ordinal='5' />
              <column datatype='integer' name='4s' ordinal='6' />
              <column datatype='integer' name='6s' ordinal='7' />
              <column datatype='real' name='SR' ordinal='8' />
              <column datatype='string' name='out/not_out' ordinal='9' />
              <column datatype='string' name='match_id' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_bowling.csv' table='[df_bowling#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='match' ordinal='0' />
              <column datatype='string' name='bowlingTeam' ordinal='1' />
              <column datatype='string' name='bowlerName' ordinal='2' />
              <column datatype='real' name='overs' ordinal='3' />
              <column datatype='integer' name='maiden' ordinal='4' />
              <column datatype='integer' name='runs' ordinal='5' />
              <column datatype='integer' name='wickets' ordinal='6' />
              <column datatype='real' name='economy' ordinal='7' />
              <column datatype='integer' name='0s' ordinal='8' />
              <column datatype='integer' name='4s' ordinal='9' />
              <column datatype='integer' name='6s' ordinal='10' />
              <column datatype='integer' name='wides' ordinal='11' />
              <column datatype='integer' name='noBalls' ordinal='12' />
              <column datatype='string' name='match_id' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_match.csv' table='[df_match#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='team1' ordinal='0' />
              <column datatype='string' name='team2' ordinal='1' />
              <column datatype='string' name='winner' ordinal='2' />
              <column datatype='string' name='margin' ordinal='3' />
              <column datatype='string' name='ground' ordinal='4' />
              <column datatype='date' name='matchDate' ordinal='5' />
              <column datatype='string' name='match_id' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[0s]' value='[df_bowling.csv].[0s]' />
          <map key='[4s (df_bowling.csv)]' value='[df_bowling.csv].[4s]' />
          <map key='[4s]' value='[df_batting.csv].[4s]' />
          <map key='[6s (df_bowling.csv)]' value='[df_bowling.csv].[6s]' />
          <map key='[6s]' value='[df_batting.csv].[6s]' />
          <map key='[SR]' value='[df_batting.csv].[SR]' />
          <map key='[balls]' value='[df_batting.csv].[balls]' />
          <map key='[batsmanName]' value='[df_batting.csv].[batsmanName]' />
          <map key='[battingPos]' value='[df_batting.csv].[battingPos]' />
          <map key='[battingStyle]' value='[df_players.csv].[battingStyle]' />
          <map key='[bowlerName]' value='[df_bowling.csv].[bowlerName]' />
          <map key='[bowlingStyle]' value='[df_players.csv].[bowlingStyle]' />
          <map key='[bowlingTeam]' value='[df_bowling.csv].[bowlingTeam]' />
          <map key='[description]' value='[df_players.csv].[description]' />
          <map key='[economy]' value='[df_bowling.csv].[economy]' />
          <map key='[ground]' value='[df_match.csv].[ground]' />
          <map key='[image]' value='[df_players.csv].[image]' />
          <map key='[maiden]' value='[df_bowling.csv].[maiden]' />
          <map key='[margin]' value='[df_match.csv].[margin]' />
          <map key='[match (df_bowling.csv)]' value='[df_bowling.csv].[match]' />
          <map key='[matchDate]' value='[df_match.csv].[matchDate]' />
          <map key='[match]' value='[df_batting.csv].[match]' />
          <map key='[match_id (df_bowling.csv)]' value='[df_bowling.csv].[match_id]' />
          <map key='[match_id (df_match.csv)]' value='[df_match.csv].[match_id]' />
          <map key='[match_id]' value='[df_batting.csv].[match_id]' />
          <map key='[name]' value='[df_players.csv].[name]' />
          <map key='[noBalls]' value='[df_bowling.csv].[noBalls]' />
          <map key='[out/not_out]' value='[df_batting.csv].[out/not_out]' />
          <map key='[overs]' value='[df_bowling.csv].[overs]' />
          <map key='[playingRole]' value='[df_players.csv].[playingRole]' />
          <map key='[runs (df_bowling.csv)]' value='[df_bowling.csv].[runs]' />
          <map key='[runs]' value='[df_batting.csv].[runs]' />
          <map key='[team1]' value='[df_match.csv].[team1]' />
          <map key='[team2]' value='[df_match.csv].[team2]' />
          <map key='[teamInnings]' value='[df_batting.csv].[teamInnings]' />
          <map key='[team]' value='[df_players.csv].[team]' />
          <map key='[wickets]' value='[df_bowling.csv].[wickets]' />
          <map key='[wides]' value='[df_bowling.csv].[wides]' />
          <map key='[winner]' value='[df_match.csv].[winner]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>image</remote-name>
            <remote-type>129</remote-type>
            <local-name>[image]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>image</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battingStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[battingStyle]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>battingStyle</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowlingStyle</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowlingStyle]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>bowlingStyle</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>playingRole</remote-name>
            <remote-type>129</remote-type>
            <local-name>[playingRole]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>playingRole</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[df_players.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>match</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamInnings</remote-name>
            <remote-type>129</remote-type>
            <local-name>[teamInnings]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>teamInnings</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battingPos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[battingPos]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>battingPos</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsmanName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsmanName]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>batsmanName</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runs]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>balls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[balls]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>balls</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4s]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>4s</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6s]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>6s</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SR]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>SR</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>out/not_out</remote-name>
            <remote-type>129</remote-type>
            <local-name>[out/not_out]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>out/not_out</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[df_batting.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match (df_bowling.csv)]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>match</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowlingTeam</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowlingTeam]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>bowlingTeam</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowlerName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowlerName]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>bowlerName</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>overs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[overs]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>overs</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maiden</remote-name>
            <remote-type>20</remote-type>
            <local-name>[maiden]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>maiden</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[runs (df_bowling.csv)]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>runs</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wickets]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>wickets</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>economy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[economy]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>economy</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[0s]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>0s</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4s (df_bowling.csv)]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>4s</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6s</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6s (df_bowling.csv)]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>6s</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wides</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wides]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>wides</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noBalls</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noBalls]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>noBalls</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match_id (df_bowling.csv)]</local-name>
            <parent-name>[df_bowling.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[margin]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>margin</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ground]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>ground</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>matchDate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[matchDate]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>matchDate</remote-alias>
            <ordinal>37</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[match_id (df_match.csv)]</local-name>
            <parent-name>[df_match.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[0S (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[0s]' peg='0' size='2.13' />
      </column>
      <column caption='0S' datatype='integer' name='[0s]' role='measure' type='quantitative' />
      <column caption='4S (Df Bowling.Csv)' datatype='integer' name='[4s (df_bowling.csv)]' role='measure' type='quantitative' />
      <column caption='4S' datatype='integer' name='[4s]' role='measure' type='quantitative' />
      <column caption='6S (Df Bowling.Csv)' datatype='integer' name='[6s (df_bowling.csv)]' role='measure' type='quantitative' />
      <column caption='6S' datatype='integer' name='[6s]' role='measure' type='quantitative' />
      <column caption='Player Filter' datatype='boolean' name='[Calculation_1048494325208772610]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[batsmanName] = [Parameters].[Parameter 1]' />
      </column>
      <column caption='df_batting.csv' datatype='table' name='[__tableau_internal_object_id__].[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]' role='measure' type='quantitative' />
      <column caption='df_bowling.csv' datatype='table' name='[__tableau_internal_object_id__].[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]' role='measure' type='quantitative' />
      <column caption='df_match.csv' datatype='table' name='[__tableau_internal_object_id__].[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]' role='measure' type='quantitative' />
      <column caption='df_players.csv' datatype='table' name='[__tableau_internal_object_id__].[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]' role='measure' type='quantitative' />
      <column caption='Balls' datatype='integer' name='[balls]' role='measure' type='quantitative' />
      <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
          <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
          <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
        </aliases>
      </column>
      <column caption='Batting Pos' datatype='integer' name='[battingPos]' role='measure' type='quantitative' />
      <column caption='Batting Style' datatype='string' name='[battingStyle]' role='dimension' type='nominal' />
      <column caption='Bowler Name' datatype='string' name='[bowlerName]' role='dimension' type='nominal' />
      <column caption='Bowling Style' datatype='string' name='[bowlingStyle]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowlingTeam]' role='dimension' type='nominal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Economy' datatype='real' name='[economy]' role='measure' type='quantitative' />
      <column caption='Ground' datatype='string' name='[ground]' role='dimension' type='nominal' />
      <column caption='Image' datatype='string' name='[image]' role='dimension' type='nominal' />
      <column caption='Maiden' datatype='integer' name='[maiden]' role='measure' type='quantitative' />
      <column caption='Margin' datatype='string' name='[margin]' role='dimension' type='nominal' />
      <column caption='Match (Df Bowling.Csv)' datatype='string' name='[match (df_bowling.csv)]' role='dimension' type='nominal' />
      <column caption='Match Date' datatype='date' name='[matchDate]' role='dimension' type='ordinal' />
      <column caption='Match' datatype='string' name='[match]' role='dimension' type='nominal' />
      <column caption='Match Id (Df Bowling.Csv)' datatype='string' name='[match_id (df_bowling.csv)]' role='dimension' type='nominal' />
      <column caption='Match Id (Df Match.Csv)' datatype='string' name='[match_id (df_match.csv)]' role='dimension' type='nominal' />
      <column caption='Match Id' datatype='string' name='[match_id]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='No Balls' datatype='integer' name='[noBalls]' role='measure' type='quantitative' />
      <column caption='Out/Not Out' datatype='string' name='[out/not_out]' role='dimension' type='nominal' />
      <column caption='Overs' datatype='real' name='[overs]' role='measure' type='quantitative' />
      <column caption='Playing Role' datatype='string' name='[playingRole]' role='dimension' type='nominal' />
      <column caption='Runs (Df Bowling.Csv)' datatype='integer' name='[runs (df_bowling.csv)]' role='measure' type='quantitative' />
      <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Team Innings' datatype='string' name='[teamInnings]' role='dimension' type='nominal' />
      <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
      <column caption='Wides' datatype='integer' name='[wides]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[margin]' derivation='None' name='[none:margin:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Iamsc/AppData/Local/Temp/TableauTemp/#TableauTemp_07preu81mrmn381ehxl8p1373nsi.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/30/2025 04:48:33 AM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='df_players.csv_C688B770F93E4A28B41DC9365EB31C15' table='[Extract].[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]' type='table' />
            <relation name='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20' table='[Extract].[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]' type='table' />
            <relation name='df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5' table='[Extract].[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]' type='table' />
            <relation name='df_match.csv_A23525837E9B4A74858FB8A5BBED7191' table='[Extract].[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]' type='table' />
          </relation>
          <cols>
            <map key='[0s]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[0s]' />
            <map key='[4s (df_bowling.csv)]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[4s]' />
            <map key='[4s]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[4s]' />
            <map key='[6s (df_bowling.csv)]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[6s]' />
            <map key='[6s]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[6s]' />
            <map key='[SR]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[SR]' />
            <map key='[balls]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[balls]' />
            <map key='[batsmanName]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[batsmanName]' />
            <map key='[battingPos]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[battingPos]' />
            <map key='[battingStyle]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[battingStyle]' />
            <map key='[bowlerName]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[bowlerName]' />
            <map key='[bowlingStyle]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[bowlingStyle]' />
            <map key='[bowlingTeam]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[bowlingTeam]' />
            <map key='[description]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[description]' />
            <map key='[economy]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[economy]' />
            <map key='[ground]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[ground]' />
            <map key='[image]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[image]' />
            <map key='[maiden]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[maiden]' />
            <map key='[margin]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[margin]' />
            <map key='[match (df_bowling.csv)]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[match]' />
            <map key='[matchDate]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[matchDate]' />
            <map key='[match]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[match]' />
            <map key='[match_id (df_bowling.csv)]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[match_id]' />
            <map key='[match_id (df_match.csv)]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[match_id]' />
            <map key='[match_id]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[match_id]' />
            <map key='[name]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[name]' />
            <map key='[noBalls]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[noBalls]' />
            <map key='[out/not_out]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[out/not_out]' />
            <map key='[overs]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[overs]' />
            <map key='[playingRole]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[playingRole]' />
            <map key='[runs (df_bowling.csv)]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[runs]' />
            <map key='[runs]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[runs]' />
            <map key='[team1]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[team1]' />
            <map key='[team2]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[team2]' />
            <map key='[teamInnings]' value='[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20].[teamInnings]' />
            <map key='[team]' value='[df_players.csv_C688B770F93E4A28B41DC9365EB31C15].[team]' />
            <map key='[wickets]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[wickets]' />
            <map key='[wides]' value='[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5].[wides]' />
            <map key='[winner]' value='[df_match.csv_A23525837E9B4A74858FB8A5BBED7191].[winner]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>0</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>team</remote-alias>
              <ordinal>1</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>image</remote-name>
              <remote-type>129</remote-type>
              <local-name>[image]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>image</remote-alias>
              <ordinal>2</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>battingStyle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[battingStyle]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>battingStyle</remote-alias>
              <ordinal>3</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowlingStyle</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowlingStyle]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>bowlingStyle</remote-alias>
              <ordinal>4</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>playingRole</remote-name>
              <remote-type>129</remote-type>
              <local-name>[playingRole]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>playingRole</remote-alias>
              <ordinal>5</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>6</ordinal>
              <family>df_players.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>145</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[match]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>match</remote-alias>
              <ordinal>7</ordinal>
              <family>df_batting.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamInnings</remote-name>
              <remote-type>129</remote-type>
              <local-name>[teamInnings]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>teamInnings</remote-alias>
              <ordinal>8</ordinal>
              <family>df_batting.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>battingPos</remote-name>
              <remote-type>20</remote-type>
              <local-name>[battingPos]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>battingPos</remote-alias>
              <ordinal>9</ordinal>
              <family>df_batting.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>batsmanName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[batsmanName]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>batsmanName</remote-alias>
              <ordinal>10</ordinal>
              <family>df_batting.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[runs]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>runs</remote-alias>
              <ordinal>11</ordinal>
              <family>df_batting.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>balls</remote-name>
              <remote-type>20</remote-type>
              <local-name>[balls]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>balls</remote-alias>
              <ordinal>12</ordinal>
              <family>df_batting.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>4s</remote-name>
              <remote-type>20</remote-type>
              <local-name>[4s]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>4s</remote-alias>
              <ordinal>13</ordinal>
              <family>df_batting.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>6s</remote-name>
              <remote-type>20</remote-type>
              <local-name>[6s]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>6s</remote-alias>
              <ordinal>14</ordinal>
              <family>df_batting.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SR</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SR]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>SR</remote-alias>
              <ordinal>15</ordinal>
              <family>df_batting.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>240</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>out/not_out</remote-name>
              <remote-type>129</remote-type>
              <local-name>[out/not_out]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>out/not_out</remote-alias>
              <ordinal>16</ordinal>
              <family>df_batting.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[match_id]</local-name>
              <parent-name>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>17</ordinal>
              <family>df_batting.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[match (df_bowling.csv)]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>match</remote-alias>
              <ordinal>18</ordinal>
              <family>df_bowling.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowlingTeam</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowlingTeam]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>bowlingTeam</remote-alias>
              <ordinal>19</ordinal>
              <family>df_bowling.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bowlerName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bowlerName]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>bowlerName</remote-alias>
              <ordinal>20</ordinal>
              <family>df_bowling.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>132</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>overs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[overs]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>overs</remote-alias>
              <ordinal>21</ordinal>
              <family>df_bowling.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>maiden</remote-name>
              <remote-type>20</remote-type>
              <local-name>[maiden]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>maiden</remote-alias>
              <ordinal>22</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>runs</remote-name>
              <remote-type>20</remote-type>
              <local-name>[runs (df_bowling.csv)]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>runs</remote-alias>
              <ordinal>23</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wickets</remote-name>
              <remote-type>20</remote-type>
              <local-name>[wickets]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>wickets</remote-alias>
              <ordinal>24</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>economy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[economy]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>economy</remote-alias>
              <ordinal>25</ordinal>
              <family>df_bowling.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>0s</remote-name>
              <remote-type>20</remote-type>
              <local-name>[0s]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>0s</remote-alias>
              <ordinal>26</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>4s</remote-name>
              <remote-type>20</remote-type>
              <local-name>[4s (df_bowling.csv)]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>4s</remote-alias>
              <ordinal>27</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>6s</remote-name>
              <remote-type>20</remote-type>
              <local-name>[6s (df_bowling.csv)]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>6s</remote-alias>
              <ordinal>28</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wides</remote-name>
              <remote-type>20</remote-type>
              <local-name>[wides]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>wides</remote-alias>
              <ordinal>29</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>noBalls</remote-name>
              <remote-type>20</remote-type>
              <local-name>[noBalls]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>noBalls</remote-alias>
              <ordinal>30</ordinal>
              <family>df_bowling.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[match_id (df_bowling.csv)]</local-name>
              <parent-name>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>31</ordinal>
              <family>df_bowling.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team1]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>team1</remote-alias>
              <ordinal>32</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team2]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>team2</remote-alias>
              <ordinal>33</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>winner</remote-name>
              <remote-type>129</remote-type>
              <local-name>[winner]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>winner</remote-alias>
              <ordinal>34</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>margin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[margin]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>margin</remote-alias>
              <ordinal>35</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ground</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ground]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>ground</remote-alias>
              <ordinal>36</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>matchDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[matchDate]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>matchDate</remote-alias>
              <ordinal>37</ordinal>
              <family>df_match.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>match_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[match_id (df_match.csv)]</local-name>
              <parent-name>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</parent-name>
              <remote-alias>match_id</remote-alias>
              <ordinal>38</ordinal>
              <family>df_match.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Indies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;no result&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;abandoned&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;U.A.E.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:margin:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;20 runs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 run&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 wickets&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7 runs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7 wickets&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;6 wickets&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;42 runs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 runs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9 runs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;89 runs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 runs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10 wickets&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;71 runs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;13 runs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;55 runs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;56 runs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;79 runs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;104 runs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33 runs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5 wickets&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;9 wickets&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16 runs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4 runs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4 wickets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;65 runs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 runs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 runs&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
          <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
          <aliases>
            <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
            <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
            <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
            <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
            <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
            <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
            <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
            <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
            <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
            <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
            <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
            <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
            <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
            <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
            <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
            <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
            <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
            <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
            <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
            <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
            <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
            <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
            <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
            <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
            <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
            <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
            <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
            <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
            <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
          </aliases>
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='df_batting.csv' id='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20'>
            <properties context=''>
              <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_batting.csv' table='[df_batting#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='match' ordinal='0' />
                  <column datatype='string' name='teamInnings' ordinal='1' />
                  <column datatype='integer' name='battingPos' ordinal='2' />
                  <column datatype='string' name='batsmanName' ordinal='3' />
                  <column datatype='integer' name='runs' ordinal='4' />
                  <column datatype='integer' name='balls' ordinal='5' />
                  <column datatype='integer' name='4s' ordinal='6' />
                  <column datatype='integer' name='6s' ordinal='7' />
                  <column datatype='real' name='SR' ordinal='8' />
                  <column datatype='string' name='out/not_out' ordinal='9' />
                  <column datatype='string' name='match_id' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20' table='[Extract].[df_batting.csv_6275D3899E0D4616B76E25682CC1DB20]' type='table' />
            </properties>
          </object>
          <object caption='df_bowling.csv' id='df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5'>
            <properties context=''>
              <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_bowling.csv' table='[df_bowling#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='match' ordinal='0' />
                  <column datatype='string' name='bowlingTeam' ordinal='1' />
                  <column datatype='string' name='bowlerName' ordinal='2' />
                  <column datatype='real' name='overs' ordinal='3' />
                  <column datatype='integer' name='maiden' ordinal='4' />
                  <column datatype='integer' name='runs' ordinal='5' />
                  <column datatype='integer' name='wickets' ordinal='6' />
                  <column datatype='real' name='economy' ordinal='7' />
                  <column datatype='integer' name='0s' ordinal='8' />
                  <column datatype='integer' name='4s' ordinal='9' />
                  <column datatype='integer' name='6s' ordinal='10' />
                  <column datatype='integer' name='wides' ordinal='11' />
                  <column datatype='integer' name='noBalls' ordinal='12' />
                  <column datatype='string' name='match_id' ordinal='13' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5' table='[Extract].[df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5]' type='table' />
            </properties>
          </object>
          <object caption='df_match.csv' id='df_match.csv_A23525837E9B4A74858FB8A5BBED7191'>
            <properties context=''>
              <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_match.csv' table='[df_match#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='team1' ordinal='0' />
                  <column datatype='string' name='team2' ordinal='1' />
                  <column datatype='string' name='winner' ordinal='2' />
                  <column datatype='string' name='margin' ordinal='3' />
                  <column datatype='string' name='ground' ordinal='4' />
                  <column datatype='date' name='matchDate' ordinal='5' />
                  <column datatype='string' name='match_id' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_match.csv_A23525837E9B4A74858FB8A5BBED7191' table='[Extract].[df_match.csv_A23525837E9B4A74858FB8A5BBED7191]' type='table' />
            </properties>
          </object>
          <object caption='df_players.csv' id='df_players.csv_C688B770F93E4A28B41DC9365EB31C15'>
            <properties context=''>
              <relation connection='textscan.18nx1bo0klsh8n12dd4b616miq5q' name='df_players.csv' table='[df_players#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='string' name='team' ordinal='1' />
                  <column datatype='string' name='image' ordinal='2' />
                  <column datatype='string' name='battingStyle' ordinal='3' />
                  <column datatype='string' name='bowlingStyle' ordinal='4' />
                  <column datatype='string' name='playingRole' ordinal='5' />
                  <column datatype='string' name='description' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_players.csv_C688B770F93E4A28B41DC9365EB31C15' table='[Extract].[df_players.csv_C688B770F93E4A28B41DC9365EB31C15]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[name]' />
              <expression op='[batsmanName]' />
            </expression>
            <first-end-point object-id='df_players.csv_C688B770F93E4A28B41DC9365EB31C15' />
            <second-end-point object-id='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[match_id (df_bowling.csv)]' />
            </expression>
            <first-end-point object-id='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20' />
            <second-end-point object-id='df_bowling.csv_CC2B360DF5ED4A57A97C614CD6D9F7B5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[match_id]' />
              <expression op='[match_id (df_match.csv)]' />
            </expression>
            <first-end-point object-id='df_batting.csv_6275D3899E0D4616B76E25682CC1DB20' />
            <second-end-point object-id='df_match.csv_A23525837E9B4A74858FB8A5BBED7191' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Econ vs Wickets'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Economy Rate vs Wickets</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Bowler Name' datatype='string' name='[bowlerName]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowlingTeam]' role='dimension' type='nominal' />
            <column caption='Economy' datatype='real' name='[economy]' role='measure' type='quantitative' />
            <column-instance column='[bowlerName]' derivation='None' name='[none:bowlerName:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowlingTeam]' derivation='None' name='[none:bowlingTeam:nk]' pivot='key' type='nominal' />
            <column-instance column='[economy]' derivation='Sum' name='[sum:economy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wickets]' derivation='Sum' name='[sum:wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlingTeam:nk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:economy:qk]</cols>
      </table>
      <simple-id uuid='{3EC5987B-BA77-4846-B4B5-FFBABC16AEE6}' />
    </worksheet>
    <worksheet name='Player Runs per Ground'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player Runs per Ground</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
              <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
              <aliases>
                <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
                <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
                <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
                <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
                <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
                <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
                <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
                <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
                <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
                <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
                <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
                <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
                <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
                <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
                <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
                <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
                <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
                <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
                <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
                <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
                <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
                <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
                <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
                <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
                <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Player Filter' datatype='boolean' name='[Calculation_1048494325208772610]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsmanName] = [Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[SR]' role='measure' type='quantitative' />
            <column-instance column='[SR]' derivation='Avg' name='[avg:SR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economy]' derivation='Avg' name='[avg:economy:qk]' pivot='key' type='quantitative' />
            <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
              </aliases>
            </column>
            <column-instance column='[match_id]' derivation='Count' name='[cnt:match_id:qk]' pivot='key' type='quantitative' />
            <column caption='Economy' datatype='real' name='[economy]' role='measure' type='quantitative' />
            <column caption='Ground' datatype='string' name='[ground]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='string' name='[match_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1048494325208772610]' derivation='None' name='[none:Calculation_1048494325208772610:nk]' pivot='key' type='nominal' />
            <column-instance column='[ground]' derivation='None' name='[none:ground:nk]' pivot='key' type='nominal' />
            <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
            <column-instance column='[runs]' derivation='Sum' name='[sum:runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wickets]' derivation='Sum' name='[sum:wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]'>
            <groupfilter function='member' level='[none:Calculation_1048494325208772610:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:SR:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:economy:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:match_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:ground:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]</cols>
      </table>
      <simple-id uuid='{6295A0C7-025C-4952-995E-BFCC103BD2B5}' />
    </worksheet>
    <worksheet name='Player Runs per Match'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player Runs per Match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
              <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
              <aliases>
                <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
                <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
                <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
                <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
                <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
                <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
                <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
                <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
                <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
                <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
                <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
                <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
                <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
                <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
                <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
                <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
                <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
                <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
                <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
                <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
                <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
                <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
                <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
                <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
                <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Player Filter' datatype='boolean' name='[Calculation_1048494325208772610]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsmanName] = [Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[SR]' role='measure' type='quantitative' />
            <column-instance column='[SR]' derivation='Avg' name='[avg:SR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economy]' derivation='Avg' name='[avg:economy:qk]' pivot='key' type='quantitative' />
            <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
              </aliases>
            </column>
            <column-instance column='[match_id]' derivation='Count' name='[cnt:match_id:qk]' pivot='key' type='quantitative' />
            <column caption='Economy' datatype='real' name='[economy]' role='measure' type='quantitative' />
            <column caption='Match' datatype='string' name='[match]' role='dimension' type='nominal' />
            <column caption='Match Id' datatype='string' name='[match_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1048494325208772610]' derivation='None' name='[none:Calculation_1048494325208772610:nk]' pivot='key' type='nominal' />
            <column-instance column='[match]' derivation='None' name='[none:match:nk]' pivot='key' type='nominal' />
            <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
            <column-instance column='[runs]' derivation='Sum' name='[sum:runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wickets]' derivation='Sum' name='[sum:wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]'>
            <groupfilter function='member' level='[none:Calculation_1048494325208772610:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:SR:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:economy:qk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:match_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:match:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]</cols>
      </table>
      <simple-id uuid='{BFDDBDFC-7BBE-4D98-9E9B-829783F747EA}' />
    </worksheet>
    <worksheet name='Player Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player Stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
              <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
              <aliases>
                <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
                <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
                <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
                <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
                <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
                <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
                <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
                <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
                <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
                <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
                <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
                <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
                <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
                <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
                <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
                <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
                <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
                <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
                <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
                <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
                <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
                <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
                <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
                <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
                <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Player Filter' datatype='boolean' name='[Calculation_1048494325208772610]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[batsmanName] = [Parameters].[Parameter 1]' />
            </column>
            <column datatype='real' name='[SR]' role='measure' type='quantitative' />
            <column-instance column='[SR]' derivation='Avg' name='[avg:SR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[economy]' derivation='Avg' name='[avg:economy:qk]' pivot='key' type='quantitative' />
            <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
              </aliases>
            </column>
            <column-instance column='[match_id]' derivation='Count' name='[cnt:match_id:qk]' pivot='key' type='quantitative' />
            <column caption='Economy' datatype='real' name='[economy]' role='measure' type='quantitative' />
            <column caption='Match Id' datatype='string' name='[match_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1048494325208772610]' derivation='None' name='[none:Calculation_1048494325208772610:nk]' pivot='key' type='nominal' />
            <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
            <column-instance column='[runs]' derivation='Sum' name='[sum:runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[wickets]' derivation='Sum' name='[sum:wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]'>
            <groupfilter function='member' level='[none:Calculation_1048494325208772610:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:SR:qk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:economy:qk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:match_id:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='12'><![CDATA[Total Runs: <[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'><![CDATA[Average Strike Rate: <[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:SR:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'><![CDATA[Average Economy: <[federated.1h5omzz1629zha1fd73yt0r0xjy4].[avg:economy:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'><![CDATA[Total Wickets: <[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='12'><![CDATA[Total Matches: <[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:match_id:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6BE72FFF-1325-4535-8D79-3243C5B5778B}' />
    </worksheet>
    <worksheet name='Run Margin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Win Run Margin Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column-instance column='[margin]' derivation='Count' name='[cnt:margin:qk]' pivot='key' type='quantitative' />
            <column caption='Margin' datatype='string' name='[margin]' role='dimension' type='nominal' />
            <column-instance column='[margin]' derivation='None' name='[none:margin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;1 run&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;104 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;13 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;16 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;20 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;3 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;31 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;33 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;35 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;4 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;42 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;5 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;55 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;56 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;65 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;7 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;71 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;79 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;89 runs&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;9 runs&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:margin:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:margin:qk]</cols>
        <show-full-range>
          <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[0S (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{D4113836-57F2-486D-8C6F-68E287E2671D}' />
    </worksheet>
    <worksheet name='SR vs Runs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Strike Rate vs Runs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column datatype='real' name='[SR]' role='measure' type='quantitative' />
            <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
              </aliases>
            </column>
            <column-instance column='[batsmanName]' derivation='None' name='[none:batsmanName:nk]' pivot='key' type='nominal' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
            <column-instance column='[SR]' derivation='Sum' name='[sum:SR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[runs]' derivation='Sum' name='[sum:runs:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:SR:qk]' scope='rows' value='Srike Rate' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:team:nk]' />
              <lod column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:SR:qk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]</cols>
      </table>
      <simple-id uuid='{A1D17728-EDBA-4DD8-963B-C6C0D26015BF}' />
    </worksheet>
    <worksheet name='Top 10 Run Scorers'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Batsman Name' datatype='string' name='[batsmanName]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
                <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
                <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
              </aliases>
            </column>
            <column-instance column='[batsmanName]' derivation='None' name='[none:batsmanName:nk]' pivot='key' type='nominal' />
            <column caption='Runs' datatype='integer' name='[runs]' role='measure' type='quantitative' />
            <column-instance column='[runs]' derivation='Sum' name='[sum:runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsmanName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]' direction='ASC' using='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]' />
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:runs:qk]</cols>
      </table>
      <simple-id uuid='{5C481E8B-A9FD-4870-BC96-424AD125B2AD}' />
    </worksheet>
    <worksheet name='Top 10 Wicket Takers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Wicket Takers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='Bowler Name' datatype='string' name='[bowlerName]' role='dimension' type='nominal' />
            <column-instance column='[bowlerName]' derivation='None' name='[none:bowlerName:nk]' pivot='key' type='nominal' />
            <column-instance column='[wickets]' derivation='Sum' name='[sum:wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Wickets' datatype='integer' name='[wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([wickets])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowlerName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]' direction='ASC' using='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]' />
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[sum:wickets:qk]</cols>
      </table>
      <simple-id uuid='{54E45626-7079-4ACA-841B-00455946CD10}' />
    </worksheet>
    <worksheet name='Wicket Margin'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Win Wicket Margin Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column caption='0S' datatype='integer' name='[0s]' role='measure' type='quantitative' />
            <column-instance column='[0s]' derivation='Count' name='[cnt:0s:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin]' derivation='Count' name='[cnt:margin:qk]' pivot='key' type='quantitative' />
            <column caption='Margin' datatype='string' name='[margin]' role='dimension' type='nominal' />
            <column-instance column='[margin]' derivation='None' name='[none:margin:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;10 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;3 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;4 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;5 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;6 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;7 wickets&quot;' />
              <groupfilter function='member' level='[none:margin:nk]' member='&quot;9 wickets&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:0s:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]' />
              <text column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:margin:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:0s:qk]</cols>
        <show-full-range>
          <column>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[0S (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{4E6CA039-5005-4FB8-954E-8A2761C55445}' />
    </worksheet>
    <worksheet name='Wins per Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Wins per Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_batting+' name='federated.1h5omzz1629zha1fd73yt0r0xjy4' />
          </datasources>
          <datasource-dependencies datasource='federated.1h5omzz1629zha1fd73yt0r0xjy4'>
            <column-instance column='[winner]' derivation='Count' name='[cnt:winner:qk]' pivot='key' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]' direction='ASC' using='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:winner:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:winner:qk]' scope='cols' value='Number of Times Won' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]</rows>
        <cols>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[cnt:winner:qk]</cols>
      </table>
      <simple-id uuid='{2558CB8D-A88A-451F-969D-1264350CF361}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='860' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Player' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Virat Kohli&quot;'>
          <calculation class='tableau' formula='&quot;Virat Kohli&quot;' />
          <aliases>
            <alias key='&quot;Aaron Finch(c)&quot;' value='Aaron Finch' />
            <alias key='&quot;Andy Balbirnie(c)&quot;' value='Andy Balbirnie' />
            <alias key='&quot;Chundangapoyil Rizwan(c)&quot;' value='Chundangapoyil Rizwan' />
            <alias key='&quot;Craig Ervine(c)&quot;' value='Craig Ervine' />
            <alias key='&quot;Dasun Shanaka(c)&quot;' value='Dasun Shanaka' />
            <alias key='&quot;Devon Conwayâ€&quot;' value='Devon Conway' />
            <alias key='&quot;Dinesh Karthikâ€&quot;' value='Dinesh Karthik' />
            <alias key='&quot;Gerhard Erasmus(c)&quot;' value='Gerhard Erasmus' />
            <alias key='&quot;Jos Buttler(c)â€&quot;' value='Jos Buttler' />
            <alias key='&quot;Kane Williamson(c)&quot;' value='Kane Williamson' />
            <alias key='&quot;Kusal Mendisâ€&quot;' value='Kusal Mendis' />
            <alias key='&quot;Lorcan Tuckerâ€&quot;' value='Lorcan Tucker' />
            <alias key='&quot;Matthew Crossâ€&quot;' value='Matthew Cross' />
            <alias key='&quot;Matthew Wade(c)â€&quot;' value='Matthew Wade(c)' />
            <alias key='&quot;Matthew Wadeâ€&quot;' value='Matthew Wade' />
            <alias key='&quot;Mohammad Nabi(c)&quot;' value='Mohammad Nabi' />
            <alias key='&quot;Mohammad Rizwanâ€&quot;' value='Mohammad Rizwan' />
            <alias key='&quot;Nicholas Pooran(c)â€&quot;' value='Nicholas Pooran' />
            <alias key='&quot;Quinton de Kockâ€&quot;' value='Quinton de Kock' />
            <alias key='&quot;Rahmanullah Gurbazâ€&quot;' value='Rahmanullah Gurbaz' />
            <alias key='&quot;Regis Chakabva(c)â€&quot;' value='Regis Chakabva(c)' />
            <alias key='&quot;Regis Chakabvaâ€&quot;' value='Regis Chakabva' />
            <alias key='&quot;Richie Berrington(c)&quot;' value='Richie Berrington' />
            <alias key='&quot;Rishabh Pantâ€&quot;' value='Rishabh Pant' />
            <alias key='&quot;Rohit Sharma(c)&quot;' value='Rohit Sharma' />
            <alias key='&quot;Scott Edwards(c)â€&quot;' value='Scott Edwards' />
            <alias key='&quot;Shakib Al Hasan(c)&quot;' value='Shakib Al Hasan' />
            <alias key='&quot;Vriitya Aravindâ€&quot;' value='Vriitya Aravind' />
            <alias key='&quot;Zane Greenâ€&quot;' value='Zane Green' />
          </aliases>
          <members>
            <member alias='Aaron Finch' value='&quot;Aaron Finch(c)&quot;' />
            <member value='&quot;Aayan Afzal Khan&quot;' />
            <member value='&quot;Adam Zampa&quot;' />
            <member value='&quot;Afif Hossain&quot;' />
            <member value='&quot;Aiden Markram&quot;' />
            <member value='&quot;Akeal Hosein&quot;' />
            <member value='&quot;Alex Hales&quot;' />
            <member value='&quot;Alishan Sharafu&quot;' />
            <member value='&quot;Alzarri Joseph&quot;' />
            <member alias='Andy Balbirnie' value='&quot;Andy Balbirnie(c)&quot;' />
            <member value='&quot;Anrich Nortje&quot;' />
            <member value='&quot;Arshdeep Singh&quot;' />
            <member value='&quot;Aryan Lakra&quot;' />
            <member value='&quot;Asif Ali&quot;' />
            <member value='&quot;Axar Patel&quot;' />
            <member value='&quot;Azmatullah Omarzai&quot;' />
            <member value='&quot;Babar Azam(c)&quot;' />
            <member value='&quot;Barry McCarthy&quot;' />
            <member value='&quot;Bas de Leede&quot;' />
            <member value='&quot;Basil Hameed&quot;' />
            <member value='&quot;Ben Stokes&quot;' />
            <member value='&quot;Bernard Scholtz&quot;' />
            <member value='&quot;Bhanuka Rajapaksa&quot;' />
            <member value='&quot;Bhuvneshwar Kumar&quot;' />
            <member value='&quot;Blessing Muzarabani&quot;' />
            <member value='&quot;Brad Evans&quot;' />
            <member value='&quot;Brandon King&quot;' />
            <member value='&quot;Calum MacLeod&quot;' />
            <member value='&quot;Cameron Green&quot;' />
            <member value='&quot;Chamika Karunaratne&quot;' />
            <member value='&quot;Charith Asalanka&quot;' />
            <member value='&quot;Chirag Suri&quot;' />
            <member value='&quot;Chris Greaves&quot;' />
            <member value='&quot;Chris Woakes&quot;' />
            <member alias='Chundangapoyil Rizwan' value='&quot;Chundangapoyil Rizwan(c)&quot;' />
            <member value='&quot;Colin Ackermann&quot;' />
            <member alias='Craig Ervine' value='&quot;Craig Ervine(c)&quot;' />
            <member value='&quot;Curtis Campher&quot;' />
            <member value='&quot;Danushka Gunathilaka&quot;' />
            <member value='&quot;Darwish Rasooli&quot;' />
            <member value='&quot;Daryl Mitchell&quot;' />
            <member alias='Dasun Shanaka' value='&quot;Dasun Shanaka(c)&quot;' />
            <member value='&quot;David Miller&quot;' />
            <member value='&quot;David Warner&quot;' />
            <member value='&quot;David Wiese&quot;' />
            <member value='&quot;Dawid Malan&quot;' />
            <member value='&quot;Deepak Hooda&quot;' />
            <member alias='Devon Conway' value='&quot;Devon Conwayâ€&quot;' />
            <member value='&quot;Dhananjaya de Silva&quot;' />
            <member alias='Dinesh Karthik' value='&quot;Dinesh Karthikâ€&quot;' />
            <member value='&quot;Divan la Cock&quot;' />
            <member value='&quot;Dushmantha Chameera&quot;' />
            <member value='&quot;Evin Lewis&quot;' />
            <member value='&quot;Fakhar Zaman&quot;' />
            <member value='&quot;Fareed Ahmad&quot;' />
            <member value='&quot;Fazalhaq Farooqi&quot;' />
            <member value='&quot;Finn Allen&quot;' />
            <member value='&quot;Fionn Hand&quot;' />
            <member value='&quot;Fred Klaassen&quot;' />
            <member value='&quot;Gareth Delany&quot;' />
            <member value='&quot;George Dockrell&quot;' />
            <member value='&quot;George Munsey&quot;' />
            <member alias='Gerhard Erasmus' value='&quot;Gerhard Erasmus(c)&quot;' />
            <member value='&quot;Glenn Maxwell&quot;' />
            <member value='&quot;Glenn Phillips&quot;' />
            <member value='&quot;Gulbadin Naib&quot;' />
            <member value='&quot;Haider Ali&quot;' />
            <member value='&quot;Hardik Pandya&quot;' />
            <member value='&quot;Haris Rauf&quot;' />
            <member value='&quot;Harry Brook&quot;' />
            <member value='&quot;Harry Tector&quot;' />
            <member value='&quot;Hasan Mahmud&quot;' />
            <member value='&quot;Hazratullah Zazai&quot;' />
            <member value='&quot;Heinrich Klaasen&quot;' />
            <member value='&quot;Ibrahim Zadran&quot;' />
            <member value='&quot;Iftikhar Ahmed&quot;' />
            <member value='&quot;Ish Sodhi&quot;' />
            <member value='&quot;James Neesham&quot;' />
            <member value='&quot;Jan Frylinck&quot;' />
            <member value='&quot;Jan Nicol Loftie-Eaton&quot;' />
            <member value='&quot;Jason Holder&quot;' />
            <member value='&quot;JJ Smit&quot;' />
            <member value='&quot;Johnson Charles&quot;' />
            <member alias='Jos Buttler' value='&quot;Jos Buttler(c)â€&quot;' />
            <member value='&quot;Josh Davey&quot;' />
            <member value='&quot;Josh Hazlewood&quot;' />
            <member value='&quot;Josh Little&quot;' />
            <member value='&quot;Junaid Siddique&quot;' />
            <member value='&quot;Kagiso Rabada&quot;' />
            <member value='&quot;Kane Richardson&quot;' />
            <member alias='Kane Williamson' value='&quot;Kane Williamson(c)&quot;' />
            <member value='&quot;Karthik Meiyappan&quot;' />
            <member value='&quot;Kashif Daud&quot;' />
            <member value='&quot;Kasun Rajitha&quot;' />
            <member value='&quot;Keshav Maharaj&quot;' />
            <member value='&quot;KL Rahul&quot;' />
            <member alias='Kusal Mendis' value='&quot;Kusal Mendisâ€&quot;' />
            <member value='&quot;Kyle Mayers&quot;' />
            <member value='&quot;Lahiru Kumara&quot;' />
            <member value='&quot;Liam Livingstone&quot;' />
            <member value='&quot;Litton Das&quot;' />
            <member value='&quot;Logan van Beek&quot;' />
            <member alias='Lorcan Tucker' value='&quot;Lorcan Tuckerâ€&quot;' />
            <member value='&quot;Luke Jongwe&quot;' />
            <member value='&quot;Lungi Ngidi&quot;' />
            <member value='&quot;Maheesh Theekshana&quot;' />
            <member value='&quot;Marcus Stoinis&quot;' />
            <member value='&quot;Mark Adair&quot;' />
            <member alias='Matthew Cross' value='&quot;Matthew Crossâ€&quot;' />
            <member alias='Matthew Wade(c)' value='&quot;Matthew Wade(c)â€&quot;' />
            <member alias='Matthew Wade' value='&quot;Matthew Wadeâ€&quot;' />
            <member value='&quot;Max O&apos;Dowd&quot;' />
            <member value='&quot;Mehidy Hasan Miraz&quot;' />
            <member value='&quot;Michael Jones&quot;' />
            <member value='&quot;Michael Leask&quot;' />
            <member value='&quot;Michael van Lingen&quot;' />
            <member value='&quot;Milton Shumba&quot;' />
            <member value='&quot;Mitchell Marsh&quot;' />
            <member value='&quot;Mitchell Santner&quot;' />
            <member value='&quot;Mitchell Starc&quot;' />
            <member value='&quot;Moeen Ali&quot;' />
            <member value='&quot;Mohammad Haris&quot;' />
            <member alias='Mohammad Nabi' value='&quot;Mohammad Nabi(c)&quot;' />
            <member value='&quot;Mohammad Nawaz&quot;' />
            <member alias='Mohammad Rizwan' value='&quot;Mohammad Rizwanâ€&quot;' />
            <member value='&quot;Mohammad Wasim&quot;' />
            <member value='&quot;Mohammed Shami&quot;' />
            <member value='&quot;Mosaddek Hossain&quot;' />
            <member value='&quot;Muhammad Waseem&quot;' />
            <member value='&quot;Mujeeb Ur Rahman&quot;' />
            <member value='&quot;Mustafizur Rahman&quot;' />
            <member value='&quot;Najibullah Zadran&quot;' />
            <member value='&quot;Najmul Hossain Shanto&quot;' />
            <member value='&quot;Naseem Shah&quot;' />
            <member value='&quot;Nasum Ahmed&quot;' />
            <member value='&quot;Naveen-ul-Haq&quot;' />
            <member alias='Nicholas Pooran' value='&quot;Nicholas Pooran(c)â€&quot;' />
            <member value='&quot;Nurul Hasanâ€&quot;' />
            <member value='&quot;Obed McCoy&quot;' />
            <member value='&quot;Odean Smith&quot;' />
            <member value='&quot;Pat Cummins&quot;' />
            <member value='&quot;Pathum Nissanka&quot;' />
            <member value='&quot;Paul Stirling&quot;' />
            <member value='&quot;Paul van Meekeren&quot;' />
            <member value='&quot;Phil Salt&quot;' />
            <member value='&quot;Pramod Madushan&quot;' />
            <member alias='Quinton de Kock' value='&quot;Quinton de Kockâ€&quot;' />
            <member alias='Rahmanullah Gurbaz' value='&quot;Rahmanullah Gurbazâ€&quot;' />
            <member value='&quot;Rashid Khan&quot;' />
            <member value='&quot;Ravichandran Ashwin&quot;' />
            <member alias='Regis Chakabva(c)' value='&quot;Regis Chakabva(c)â€&quot;' />
            <member alias='Regis Chakabva' value='&quot;Regis Chakabvaâ€&quot;' />
            <member value='&quot;Richard Ngarava&quot;' />
            <member alias='Richie Berrington' value='&quot;Richie Berrington(c)&quot;' />
            <member value='&quot;Rilee Rossouw&quot;' />
            <member alias='Rishabh Pant' value='&quot;Rishabh Pantâ€&quot;' />
            <member value='&quot;Roelof van der Merwe&quot;' />
            <member alias='Rohit Sharma' value='&quot;Rohit Sharma(c)&quot;' />
            <member value='&quot;Rovman Powell&quot;' />
            <member value='&quot;Ruben Trumpelmann&quot;' />
            <member value='&quot;Ryan Burl&quot;' />
            <member value='&quot;Sam Curran&quot;' />
            <member alias='Scott Edwards' value='&quot;Scott Edwards(c)â€&quot;' />
            <member value='&quot;Sean Williams&quot;' />
            <member value='&quot;Shadab Khan&quot;' />
            <member value='&quot;Shaheen Shah Afridi&quot;' />
            <member alias='Shakib Al Hasan' value='&quot;Shakib Al Hasan(c)&quot;' />
            <member value='&quot;Shamarh Brooks&quot;' />
            <member value='&quot;Shan Masood&quot;' />
            <member value='&quot;Shariz Ahmad&quot;' />
            <member value='&quot;Sikandar Raza&quot;' />
            <member value='&quot;Simi Singh&quot;' />
            <member value='&quot;Soumya Sarkar&quot;' />
            <member value='&quot;Stephan Baard&quot;' />
            <member value='&quot;Stephan Myburgh&quot;' />
            <member value='&quot;Steven Smith&quot;' />
            <member value='&quot;Suryakumar Yadav&quot;' />
            <member value='&quot;Tabraiz Shamsi&quot;' />
            <member value='&quot;Taskin Ahmed&quot;' />
            <member value='&quot;Temba Bavuma(c)&quot;' />
            <member value='&quot;Tendai Chatara&quot;' />
            <member value='&quot;Tim David&quot;' />
            <member value='&quot;Tim Pringle&quot;' />
            <member value='&quot;Tim Southee&quot;' />
            <member value='&quot;Timm van der Gugten&quot;' />
            <member value='&quot;Tom Cooper&quot;' />
            <member value='&quot;Tony Munyonga&quot;' />
            <member value='&quot;Tristan Stubbs&quot;' />
            <member value='&quot;Usman Ghani&quot;' />
            <member value='&quot;Vikramjit Singh&quot;' />
            <member value='&quot;Virat Kohli&quot;' />
            <member alias='Vriitya Aravind' value='&quot;Vriitya Aravindâ€&quot;' />
            <member value='&quot;Wanindu Hasaranga de Silva&quot;' />
            <member value='&quot;Wayne Parnell&quot;' />
            <member value='&quot;Wellington Masakadza&quot;' />
            <member value='&quot;Wessly Madhevere&quot;' />
            <member value='&quot;Yasir Ali&quot;' />
            <member value='&quot;Zahoor Khan&quot;' />
            <member alias='Zane Green' value='&quot;Zane Greenâ€&quot;' />
            <member value='&quot;Zawar Farid&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='8' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98128' id='29' param='horz' type-v2='layout-flow' w='97858' x='1071' y='936'>
            <zone h='98128' id='25' param='horz' type-v2='layout-flow' w='65596' x='1071' y='936'>
              <zone h='98128' id='22' param='horz' type-v2='layout-flow' w='65596' x='1071' y='936'>
                <zone h='98128' id='17' param='horz' type-v2='layout-flow' w='65596' x='1071' y='936'>
                  <zone h='98128' id='14' param='horz' type-v2='layout-flow' w='65596' x='1071' y='936'>
                    <zone h='98128' id='11' param='horz' type-v2='layout-flow' w='65596' x='1071' y='936'>
                      <zone h='98128' id='9' type-v2='layout-basic' w='65596' x='1071' y='936'>
                        <zone h='69989' id='7' name='Wins per Team' w='21870' x='44797' y='936'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='28139' id='12' name='Run Margin' w='32795' x='1071' y='70925'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='34296' id='19' name='Top 10 Run Scorers' w='21860' x='1071' y='936'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='35693' id='20' name='SR vs Runs' w='21860' x='1071' y='35232'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='35693' id='23' name='Econ vs Wickets' w='21866' x='22931' y='35232'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='34296' id='26' name='Top 10 Wicket Takers' w='21866' x='22931' y='936'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='28139' id='35' name='Wicket Margin' w='32801' x='33866' y='70925'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='241' h='98128' id='28' is-fixed='true' param='vert' type-v2='layout-flow' w='32262' x='66667' y='936'>
              <zone h='6082' id='30' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='32262' x='66667' y='936'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='218' h='26433' id='27' is-fixed='true' name='Player Stats' w='32262' x='66667' y='7018'>
                <layout-cache fixed-size-w='220' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24094' id='31' name='Player Runs per Ground' w='32262' x='66667' y='33451'>
                <layout-cache fixed-size-h='198' minwidth='180' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28772' id='32' name='Player Runs per Match' w='32262' x='66667' y='57545'>
                <layout-cache fixed-size-h='238' minwidth='220' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2700' minheight='2700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98128' id='40' param='vert' type-v2='layout-flow' w='97858' x='1071' y='936'>
                <zone fixed-size='280' h='34296' id='19' is-fixed='true' name='Top 10 Run Scorers' w='21860' x='1071' y='936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34296' id='26' is-fixed='true' name='Top 10 Wicket Takers' w='21866' x='22931' y='936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69989' id='7' is-fixed='true' name='Wins per Team' w='21870' x='44797' y='936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6082' id='30' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='32262' x='66667' y='936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='26433' id='27' is-fixed='true' name='Player Stats' w='32262' x='66667' y='7018'>
                  <layout-cache fixed-size-w='220' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='199' h='24094' id='31' is-fixed='true' name='Player Runs per Ground' w='32262' x='66667' y='33451'>
                  <layout-cache fixed-size-h='198' minwidth='180' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35693' id='20' is-fixed='true' name='SR vs Runs' w='21860' x='1071' y='35232'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35693' id='23' is-fixed='true' name='Econ vs Wickets' w='21866' x='22931' y='35232'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='239' h='28772' id='32' is-fixed='true' name='Player Runs per Match' w='32262' x='66667' y='57545'>
                  <layout-cache fixed-size-h='238' minwidth='220' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='28139' id='12' is-fixed='true' name='Run Margin' w='32795' x='1071' y='70925'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='28139' id='35' is-fixed='true' name='Wicket Margin' w='32801' x='33866' y='70925'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{53453969-33E0-449F-A2E0-DB510FA6972E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Wins per Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39C4F06F-3849-49FD-81EA-4B5AEE9A12FC}' />
    </window>
    <window class='worksheet' name='Run Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6BB3DCC-BB76-495B-AC5A-FC59516D52BF}' />
    </window>
    <window class='worksheet' name='Wicket Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B51B568-8681-439A-9FDB-DA7061045B05}' />
    </window>
    <window class='worksheet' name='Top 10 Run Scorers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:margin:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7824D541-F0D2-4C3E-ADF6-9441C349C7D4}' />
    </window>
    <window class='worksheet' name='Top 10 Wicket Takers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F7B754B-3AC6-4725-9EB3-BE19C16589AF}' />
    </window>
    <window class='worksheet' name='SR vs Runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:team:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:batsmanName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66EE1960-526F-4F9D-A04A-1D0FF8670614}' />
    </window>
    <window class='worksheet' name='Econ vs Wickets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlingTeam:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlingTeam:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A4A3C17-CE06-414B-B456-F95CB9794150}' />
    </window>
    <window class='worksheet' name='Player Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:match_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D404B505-4FFD-4512-8374-B14699FF955C}' />
    </window>
    <window class='worksheet' name='Player Runs per Ground'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:ground:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:match_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D026A93D-6E6F-415A-BC49-EDEEDF5B67EC}' />
    </window>
    <window class='worksheet' name='Player Runs per Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:Calculation_1048494325208772610:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlerName:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:bowlingTeam:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:ground:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:match:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:match_id:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:team:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:teamInnings:nk]</field>
            <field>[federated.1h5omzz1629zha1fd73yt0r0xjy4].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20C90522-9BFF-4588-9E54-31BBDFC28C07}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Econ vs Wickets'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Runs per Ground' />
        <viewpoint name='Player Runs per Match' />
        <viewpoint name='Player Stats' />
        <viewpoint name='Run Margin' />
        <viewpoint name='SR vs Runs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Run Scorers' />
        <viewpoint name='Top 10 Wicket Takers' />
        <viewpoint name='Wicket Margin' />
        <viewpoint name='Wins per Team' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2AD9C4D8-B824-4E17-9525-8B1767460F10}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Econ vs Wickets' width='192'>
      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
      c3esAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='159' name='Player Runs per Ground' width='192'>
      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
      p1bOLRAI0NzczN133x0zi4cEYAHMNjmXwWCICUWi8fv9/OY3vyErK4v6+nrlQ6/T6ZQ5ki6X
      yA8Tb21tpbS0lJKSkpjlifvupxCtVovP58Plcinf9na7Hb1er5xGJJpwOMxTTz1FRUXFtOJ/
      o9HIxYsXiUQiygwcFy5coLCwMB5NnZPH4+Htt9/G6/Vy7NgxYLJnO3/+vARgIej1esrKyrBa
      rdx9991Eo1Ha2tqoqqqKd9Nm9f777+P3+7n99tunrSssLFTmRTWbzXi9Xnp6erj33nvj0NK5
      ZWZm0tjYGLNs3759VFdXy2jQheL1enn00UdJS0tDo9EQDAZ58MEHSUtLi3fTZvT888/T1tYW
      c6qj1Wr5yU9+wurVq+nu7ubJJ5/khhtuoK+vj6997Wts2rQpji3+fCQAcTA1Q51Go1HmNE1m
      oVCIoaEhFi1alLQ1whIAoWryO4BQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1
      CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmA
      UDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAULX/AUXYqGBP1SWDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Player Runs per Match' width='192'>
      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
      hyRJIuBP/Y6q2XU6naysrDA4OEgymVzz3PL5PDdv3qSjo4M9e/YwNzcndNbZbBZJkpAkSQQJ
      jo6O8tlnn3H9+nWi0Sj5fJ6RkRGGhobI5XKMjY3R29vLysqKKOlaKBRYWVkhmUyKDufUqVMP
      7LpuJZ7IMqjZbObpp5/m0KFD4sVIJBJEIhHC4TDHjx+nra2NlZUVcrncugmbXq9n9+7dTE5O
      Eo/HsdvtzM/Pi8hLtbey2WzU1tZy/fp1jh49KnpiNTpSjYysqamhoqJizSTUZDJx+PBhrFar
      6LWnp6c5evQoer2eqakpfvaznwkxTDgc5urVqxw5cmTDe1Yr0mcyGcrLy0XJVFWss3//fqqq
      qnC73dy4cWNdaaL5+XlRsEON3JyYmGDfvn0cOHBAhGi/+OKLpFIpLl68iNVq5fjx4zQ0NIjS
      qfCX1OZ/qT+s3qNKe3u7SD9js9kIh8MkEon7WnjYijyxpYCNhlQ1XHd1YeuNUMXzk5OTpFIp
      MVqsntiqgpiOjg5GRkaE+7N79250Oh3l5eW0t7eTTqeFqmpubm7NdaxWK4cPH+Z73/sex44d
      IxQKMTQ0xPLysgg5VgvXlZeX31OJ9aDPQ6VYLNLX14ckSVy6dIkLFy6Qz+eF8JXahW0AABPP
      SURBVH4jzGYzjY2NNDQ0bKgkkyRJGJNKoVCgq6trzXOVZfmeCwZbmU21FqZO3laviGykCovH
      44yNjdHc3MwLL7zAiRMnNiw1qtPpqKurI5PJMD4+TrFYpLKyUmgNDh06xAsvvEBDQwMLCwuM
      jY2JY9XYf1Uw39TURE1NDbFYTMThr06RsrCwQG1trTC8O7VfLY79IEiSxNTUFB0dHbjdblwu
      l8hWkUqlNjxGr9eLdCq3o2ocIpHIGvcml8vR19dHW1sbL7zwAs8999yWD3a7F5tqJ9jj8eDx
      ePjiiy8YHx8nlUqxuLiI3+9f8z1V9DEyMiJcnztljLPZbFRWVnLp0iX27t0rJtELCwtcvXpV
      FKNTFGWNnFDtYefn57HZbMiyTDAY5NixY2L06OzspKmpiWg0SigU4vnnnxerUWrlebXWMCAE
      O729vUSjUZqbm+8r0VcwGMRqtXLixAmhR1azXNy8eZNdu3Y90HM2GAy0tbXR09PD6dOnsdls
      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
      zrurAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='119' name='Player Stats' width='192'>
      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
      GsYBGIya/wfp3m3DYn89ggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Run Margin' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SR vs Runs' width='192'>
      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
      cgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Run Scorers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Wicket Takers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292Vcc2Zm3++Q8kSPJkMwgNKEZSSWrVHKNtqvs6sHLZbevupf/he+7P8sX
      5+q7+i7OOTe9zlq97O7j7qW2y1NJqpJUVZqQVAgJECAJkkGMCUkOJDlHRsS5wLENEkKoSiVk
      Mp61qBJJRsQmiTf2u/f+7d9rUFVVRUenTDFudQN0dLYSPQB0yho9AHTKGj0AdMoaPQB0yho9
      AHTKGj0AdMoaPQB0yho9AHTKGj0AdMoaPQB0yho9AHTKGj0AdMoaPQB0yho9AHTKGj0AdMoa
      PQB0yho9AHTKGj0AthGlUglFUba6GSiKQrFY3OpmIEkSsixv+B49ALYRr9L27lchEFVVfeZn
      Yn5JbdF5SfzbuV6iS7ktboWKoigYjaatbYWigMGAwWB46nv0ANhm9IYjPJpPbXUz/mbYdimQ
      qqpMTk7S19e3qffLssxXX3311K4ynU4zMDDwjbt0RVEYHR3l3Llz3Llzh0KhQCKRYGJiYtPn
      yGazm/69dDbHtguAUqnEnTt3+PLLL5EkCVi5+RRFEYNEWZYpFovi9dHRUWRZJp1OixtdVVVK
      pRLpdJqpqSlx/NLSEqVSSbwnn8+TTqdFvinLMvl8nmw2uyaoRkZG6Ovr49ixY6iqSiKRwGQy
      YTabxXHFYvGJNkiShCRJYmD56NGjdc+v8/XYdilQLpejVCrR3t7OxMQEO3fuJBwOs7i4yNLS
      EgcOHGBkZASbzYaiKJw4cYJ8Ps+FCxdQFIVgMMhrr71GX18fsVhM3JhaTyHLMoqicPToUQqF
      Anfv3sVut+P3+2lvb+fGjRtIkkShUGDPnj3s2rULg8FAJpPBZrPh9/upqqoCYG5ujmg0SjAY
      pKuri0KhQLFYpLm5mUOHDnHjxg0KhQIGg4Gqqirq6uoYHR3lypUrFAoFjhw5Qn19/YY5rs7G
      bKseQFVVRkdHqamp4ciRI9y7dw9FUQiHw4yOjnL48GGWl5dJJpM0NzfT0dEBgMVi4fjx45w8
      eZKJiQkWFha4f/8+hw8fZvfu3VgsFiKRCHNzc+zduxdVVRkZGaG7u5tAIEBzczMPHz4kFouR
      SqXYv38/R44c4fbt26Jtu3fvxmw286tf/Yru7m7y+TyJRILx8XGKxSKRSIQTJ05w8uRJhoeH
      efToEQsLCxw5coSGhgamp6cBCIVCvPbaa4RCISKRyJZ8ztuJbdUDyLJMX18fFRUVLC8vMzs7
      SyKRwOFwcOzYMUKhED6fj0gkwtDQEFarlRMnTmAymaisrESWZYxGI4lEgurqaiorKwEwGAws
      Li6Sy+WYmprCaDTidDqZm5vD6XSiKAoejweTyYTVasXtdmO329c8mV0uFz/4wQ9Ip9NcvHgR
      VVWpqKgQP7darfj9fgqFAgDxeJzGxkZ8Ph/5fB7DX2YzXC4XPp8Pl8tFOp1+uR/wNmTbBICq
      qkSjUVwuF9/5zncAMJlMzM7OYjQaMZtXflWDwcDRo0fJ5/N8+umnHDhw4IlzOZ1OotEoy8vL
      Iievrq7G5XLR0tKCqqrY7Xbq6+vxer20tLRQKpWwWq3IskwmkyESiWAy/XUaMJ1OUygUsFqt
      VFdXk8/n1wTA41RXV3Pjxg1aW1uZmpp65oKOztdj2wQArKz8HT9+nIaGBmAlANLpNKFQCK/X
      C0AsFuPOnTtYLBZqa2txu920t7cDK8HR1tZGKBSioaGBS5cuAdDc3ExNTQ01NTV88cUXWCwW
      jhw5wtGjR+nq6mJsbAy/38/BgweJRqN8+eWXOBwOTp8+LdqWTCa5ceMGAHa7ndOnT5PL5Wht
      bcVqtdLW1ibavGPHDurr69m7dy8XL17E7XaL3qW5uRkAn8+H0+l8OR/sNsZQju7Q2oyO2WzG
      aFx/GKTNAplMJvGe9V7TZpXMZjPZbJYrV65w4sQJfD7fE+fWjjebzc8cuMZiMe7du0dDQwN3
      795l3759YszyNCRJ4n/+Pxf0dYDnoCwD4NtClmWSySRer1ekXN+ERCLB5OQkTU1N+P3+Z75f
      kiT+/cIAi6ktXglW/7ISbNralWBFUTBgwGB8+sNGD4BthCRJa3qnrUJbs7Db7VvajmKxuGb8
      tx7bahpUR+d50QNAp6zZVrNAOvB//L9fMB1d3tI2qH/5r4GtXaFWUeEZrdADYJuRyhZIpPNb
      3Yy/GcoyBSoWi3z66acMDg5u+ph4PM69e/fWPde5c+fWPSaZTPLxxx+TSqVQVZUHDx6wuLj4
      zGupqko6nRaLX0tLS3z11VdChKfz4ijLAEilUkxOTjI4OCgUlZqAbXZ2lmKxKObsZVmmUChg
      t9uprq4GVmY5crkc+XweRVFIpVKk02kWFhbWyKZzuRwPHjxgYGAAVVWJRCIsL6+kJ/l8nunp
      afL5laf16mvlcjkuXLjA/Pw8+Xwem81GfX09RqMRWZaZm5sTQaXzzSi7FEjbL7B3715mZ2dJ
      pVJ4vV7+8Ic/UCgUcLlc2O12Tp48SV9fH5FIBJfLxa5du5iamqK6uprPP/+cTCaD0+lkz549
      TE9P89lnnwErYrXvfOc7YqGrra2N2dlZMpmMaEMsFuPChQtUVlaysLDAP/zDPzAyMkI0GmVm
      Zobdu3dz//594vG4UJQ+evSIqqoqbt26JWTTq9WmOl+PsgsAWZZ5+PAh77zzDmazmf7+ft54
      4w0sFgvf/e53sdlsXL9+nUKhwMTEBHv37uX48eOMj4+TTCZZXl4mGo3y0UcfYbFYKBQKNDQ0
      8OMf/5h4PC4k09rcs8fjoa6ujps3bwrtf29vL0eOHGH37t309fXR3d2NyWQikUjws5/9DLvd
      TiKR4NSpU/h8PmKxGEtLS2QyGYaHh3nzzTdZWFhgaGiIHTt2vJBFt3KlrFIgTTA3MzPD+fPn
      6e/v59GjR0iStO5TtLKyUuiENLLZLBaL5YmbbqOncEdHB0tLS0QiEZFaaYtEHo+HXC6HwWDg
      wIEDuFyup55H24sgSRIej4e9e/du+aLX3zpl9+mNjIzw4Ycf8i//8i/84he/EPLo9TCZTE/c
      2MFgkFwuR3d3N/fv31+T2jwNi8VCZ2cno6OjANTX1/PgwQPC4TC9vb3s2bNHXE/DYDAwNDS0
      RgnqdDrx+/0sLy+jKMqWr7RuB0y//OUvf7nVjXiZWK1WampqsFgsGI1GvF4vFRUVVFZW4vf7
      hZ7f7/fj8Xjwer2YTCYsFgt+vx+/3091dTXJZBKj0UggECAYDOLz+TCZTHg8HtxuNwaDAbPZ
      jNfrxe1243Q6qa2tJRQKEQqFkCSJdDpNdXU1u3btEje3zWbDYDDg8XhYWlrCbrdjtVqZnZ1l
      165dBAIBlpaWkGUZn8+Hx+MRQaooCp91j7GUKWzxp/y3g64F+hqs/si+7gB0M+dQVZVMJkN/
      fz8Wi4Vjx45hMBjEsY8fp6tBnx89AF5x8vk8S0tLBIPBNSnSekiSRNfgDOmc9JJatz4rm/xL
      mM2WLW2HLJcwGIwbjpP0ANhG6GrQtehqUB2dZ6BPIG8zFpNZ5C3u1BVlxc/IZtvaVEySJIxG
      44apox4A24z/89dX9EHwc6CnQJtAc2jb7HBJc5171nlUVRW6o41QFIVCoaBrf74F9ADYBIqi
      cOXKlU173p89e5alpaV1z3P58mVh2aiqKnfu3BFWh5r5laIoTE1NievFYjF+//vfvxKe+9sN
      PQA2SSKREF6ik5OTwk9UVVUKhQLxeJxcLiee0vl8nuHh4TUenpon6Op5/La2NkwmEzMzM9y6
      dYt4PE42m+XmzZvMzs4K31ENSZIYHh4WylO9V/hm6GOA50CWZc6fP4+iKNhsNm7fvs0PfvAD
      zpw5I/Q+b731Fvl8nkuXLtHS0kJXVxc/+clPcLvdT5xPURTOnj3L9773PYaGhgiHw6iqyu7d
      uxkfHyefz7Nr1y4aGxuBlZv/0qVL1NbWcv/+fWpra3nttdde9sewrdAD4DlYWlpiaWmJf/qn
      f8JgMHDmzBkWFxfFvPfp06dxOp3Y7XbefPNN/H6/6BnWCwANp9PJa6+9htVq5YMPPkCWZSYn
      J4UaNBqNAog0qa6uDpvNxvj4OJ2dnVgsW7vg9LeMHgCbQJZlMaW2enBrNptxOp388z//MwsL
      C3z88ce8+eabX/s6q8+9Xnkfg8GA2+2moaGB5uZmYa+u8/XRP70NyOVy9Pb2EovFsFqtBINB
      QqEQn376KWazGbPZjM1m4/Lly7hcrk2twi4sLPC73/0Ou92+Jn2pqKggHA5z9uxZsT/h4sWL
      tLe3U1NTA4DD4cDj8dDV1YXVaqWxsRG/369viPkG6FKIDZBlWaQ4Pp8Ph8NBsVgkHo+jqio+
      nw+r1crS0hK5XA6HwyHcnO12O0ajkWw2i81mw2QyoaoqqVQKWZaF03OxWMTpdAoH6lKpRFVV
      FaVSSThbV1RUUCgUcDqdQhukKUZXu1DrYrjnRw+AbYQeAM+PHgDbCEmSiCSylOStLVGqLfhZ
      rdYtbYcklf4ihdDVoGWBrgZdi64G1dF5Bvos0Dbjq/szZPJbvyGmJMtYtniKtiTLGA2GDXtE
      PQC2Gf/fxXv6IPg5eKVToFQqxYMHDxgbG2N5eXnTuhdFUXj06NELq6ulKAozMzMkk0nxmuYb
      pDm7PYtMJkMsFtO1O68Yr3QAaLYhs7OzXLx4Uagln4Usy1y8ePGFqSdlWeazzz7j1q1bYrX2
      4cOH/Pa3v910qdL5+XkePHigB8ArxiudAimKwu7duzl06BD9/f0MDQ1RUVFBNBoVC1E+n4/5
      +Xlqa2uRZZn5+Xnq6+vXnCeTyZBKpaipqUGSJKLRKD6fj7m5ORRFwWKx0NLSItSX8XicYDBI
      e3s7RqMRVVUxmUwUi0USiQQej4dwOIzH40GSJHK5HMPDw+TzeZqamqiurmZxcZGxsTFcLhet
      ra2iLbIsMzs7i9/vJ5VKMTExQUVFBW1tbciyTDabJZlMihKtY2Njooiew+FgZGRkTSHu1bYo
      Os/PK90DwF+tP5aWlnC5XGQyGQqFAqlUiqtXr7K4uMj169fJZrPE43EuX778xDmy2Sy3bt0i
      n88zOjrKw4cPhQZflmUuXbpELpfjq6++YmZmhkAgwI0bN8jl/lpry2w2Cy/PeDyOzWYTVRoH
      BwdZWFggGAxy48YNotEoXV1dBAIB4vE4fX19oucIh8P09fWRTqe5efMmwWCQSCTC4OAgk5OT
      fPzxx0xPT1MsFrl69Sper5dSqcStW7dIpVJ8+eWXwkZxeHj4JfwFtjevdAAUi0XOnz/Pv/7r
      v6IoCkeOHEFRFMbGxrh//76wNXwWmuHU4uKiMJgyGo1EIhH6+/uZmZkhl8sJB7c9e/ZQUVGx
      ZgxhNBqpra1lampK9Dja/PLQ0BCSJDE7O0sulyMWizE1NUU0GiWXywmJw8OHD+nq6uLUqVMo
      ikIkEmF+fp5CocD8/DwGg4GdO3fy1ltvYbfbmZubIx6Pk06nWV5eplAo0NjYyP79+0W5VJ1v
      xiudAlmtVt5//30OHz4sXjt37hydnZ0EAgH+9Kc/YTAYxKbnp+XXZrOZtrY2bt26JSqt3759
      m9raWt577z1+/etfA882uaqrq6Onp4dSqcThw4eF1aHf76exsZGWlhYOHjyIoihUVlayd+9e
      sRq6sLBAQ0MDhUKByclJamtrqayspKOjQ5RNnZ6eFk50NpsNj8fDnj17sFgswlNUqxiv82J4
      5QPg8VU8v99Pd3c3hUKBfD6P0+nEZrNx8eJFEomE8POsqKhYc6O0tLRw9epV6urqRBD09/cL
      W3Kj0SgEbLCi0df+bTAYxHUaGxuZnp6muroap9OJ2WzmwIEDXLx4kb6+PpxOJ2+99RY1NTX8
      8Y9/xGw2s3v3bqqrqwkEArS3t3P16lUqKirweDz88Y9/xGg0sn//ftxutwgYrSr973//eywW
      C62trXR0dOBwOICVoN5qqcF24G9OCqEVp7Db7eLJv95r61EoFDCbzUKZmc/nRQX2F9GufD6P
      w+EQgafNQm10/kKhgMFgWPc9mqbmWefQ0MVwz88r3QOsh9FofMJCfL3X1sNms4l/GwwG8TR9
      Ue3SBsUam7lpV7fpcZ4WGBtht5px2F6BP+tKfbpXvg1/cz2AztPRxXBr0cVwOjrPQA8AnbLm
      FUgWdV4kv7k0QDy1tXWCVVQURcFk3NjO/dtGUeS/TBvratCy4dbQtD4L9ByUbQokyzJDQ0Nc
      vHiR4eFhVFXl4cOHpFKbv3mSySThcPgJH1BVVZmZmWF2dvaJxTlVVcWKMayI5CYnJ+nv79/U
      qrbOi6UsA0BRFLq7u5menmbfvn3ihpyYmGB5eZlcLieqsmsrsKVSaY3FYalUIplMMjU1JSwT
      tWLXANFoVEghNAtF7dpaoCWTSa5cuYLb7WZkZIRCoUA2mxUBtbpYt/a9NsOim+W+GMoyBVIU
      hUQiQXV1tShap73e3d2Ny+XCbDZz6tQpwuEwyWSSUqlEfX09bW1tDA4OkkgkWF5exmg0ksvl
      GBgYwGg0UigUOHTokKhHHIlEMJlMfPe73xVz+rIsUywWuX37Njt27MDj8VAsFrl27RoGgwGf
      z8fRo0fp6+ujVCqRy+WE8vOLL77A4XCQz+c5dOgQdXV1ujTiG1CWPYDJZOLYsWOEw2H+4z/+
      g+HhYRRFwWAw0NLSQmdnJ0tLS8RiMaqrq6mrqxMSjFQqRW9vLzt27KCpqQmLxYLFYqGhoYGa
      mhpisRiPHj3CYDBQV1fHsWPHyGazQjcEK6u/f/7zn8nlcnR0dAArC2m7du3i2LFjjI+PUygU
      qKuro6amBrvdzp07d8jlciQSCQ4cOEAgEGB2dnarPsJtQ1n2AAaDgaqqKn72s58RjUY5e/as
      MJiqqamhsrISh8OBJElMTEwINWcmkyEejxMIBKirq0OWZaLRKJlMhoGBARRFYW5ujvr6eqxW
      K4FAgEAgQHNzM7FYTFzfarVy6tQphoaGiMViQlkaCoVwOBxi78Hg4CCFQoF0Oi2qQ3q9Xqqq
      qlhcXCSdTm/hp7g9KMseQFVV0uk0+Xwen89HKBRa18+/WCwyMjLC22+/zenTpzGZTNjtdpLJ
      JPl8XhS70G7ud955h127dombtVQqUSgUmJqaWrNJx2AwUF1dzfHjx7l27dq6xTdSqRTRaJR3
      332X1157bctXd7crZdkDqKrK2NgYfX19QsPT0dGBqqpi+T4UCuHz+WhqauL8+fOoqkpTUxOV
      lZXU1NTw5z//mWKxyO7duwkGgwwMDHD+/HlyuRwtLS0YDAZRTb6+vp6mpiZg5eavra3F4XBQ
      U1NDJpPhwYMHNDU1CSFfU1MTwWAQt9vN2bNnURSFhoYGbDabCCSPx7Ohjkhnc5S1FkibubFY
      LE8dSGrvMZvN4imsqTS111bq4q7M9Ky2Ktd6AU3v/220bzW6GvT5KcseQMNoND5Tbbneex5X
      aRoMhnUFVwaD4Rt592+mfY/T0VxF0PtsZey3iQqoirLlaZuiKhjYeANRWfcA2w1dDboWXQ2q
      o/MMyjoF2o788fpDkunCFrdCRZaVDXfnvQy0tZ2NUiA9ALYZn98Z1wfBz8ErkwIpisL9+/e5
      du0a09PTqKrKxMTEuvPzq8lkMoyPj78wG0RAXPvatWuMjIwIq8VEIrHhccVikXA4TKGw/hNY
      VVVGRkaYm5sT8/7pdJrPP/+ce/furVkLUBSF8fFxoUla/dry8jILCwvPbI/Os3klAkBVVbq6
      upidnaW2tpbx8XGWlpYIh8PE4/E1ldc1QZhWIzeTyQi3tMersBcKBfE+bUpSe492Hq0A3urj
      hoaG6O3tJRQKsbCwQCQSYXx8nFgstm5btClQSZJ4+PAhuVxu3QrwWvnUe/fuCXGdpiHS6oBp
      54SV4F7d1lKpxMjICKlUimKxqKtHXwCvRAqkKArT09McP36ctrY22tvbgZVZjYGBAcLhMH6/
      nwMHDjA2NkY2m0WSJFEpcW5uTji/HTp0iEAgwODgIKlUCpvNxrFjx4jH49y/fx9YWWgKhUL0
      9fVRKBTIZDLs2bNHWBhOTU0RCoVoa2tjx44dwIr51eDgIBMTE7jdbg4dOkQ0GiUSiaCqKsFg
      kKqqKpLJJD09PRSLRXbu3MmOHTvEyvDw8DBtbW3C2a5YLHLv3j08Hg9er5disUgqlSIej7Nn
      zx5KpRKKorC8vMzg4CAWi4XFxUUAsb6g8814JXoAo9HI6dOnuXz5Mv/1X/8lvD81ZeSePXuY
      mZkRvpxVVVUA9Pb2UiqVhF+P2+1mdHSUsbExFhYW6OjoYHZ2lomJCXp6eqiqqqKlpYVbt26R
      TqcZHh6mqamJnTt3cufOHdGeY8eOMTY2xq9+9SvGx8fFYMrr9bJv3z7m5uZYXFzE4XBQVVWF
      w+Hgzp07ZLNZzGYzNTU1NDQ0iICDvwZ5R0cHTqeTeDxORUUFfr+f2tpaampqGB4e5sqVKwSD
      QWw2G3fu3KFQKHDz5k0URaG2tlZMLY6NjeliuBfAK/EIMRgM1NfX84tf/IK5uTnOnj3LW2+9
      hdlsprGxkVAohNPpRJZlxsfHiUQiLC8vY7FYkGWZQCBAY2MjkiQxPz9PLBYjmUwyPDyMyWQi
      EomwsLCA1WrFarUKsZlmPpXL5bh7965oSzAY5Oc//znJZJJPP/2U5eVlTCYTDQ0NhEIhKioq
      KJVKzMzMEA6HyeVypFIpSqUSFRUVNDY2ks/nmZiYEL9jPB5ndnYWu91OIpEgFovx05/+lGAw
      SH19PXV1dYyOjvLGG2+we/duMaaRZZlkMsnp06exWCwbFtzWeX5eiQBQVZVsNovT6aSuro7G
      xsY16kmNUqlEOBzmo48+YnFxke7u7ifeo/n91NbW0tnZiaIowntz7969+P1+MV54WltyuRw2
      mw2/38++ffuYn59/It1QVZXBwUHeffddzGYz58+f3/B3TCQSVFZWUl1dTVVVFT09PWvMdwFR
      +Hr1tJ3RaESWZdLpNH6//4ndZzrfjFcmADT7c7PZjM/n44033mBwcFA4rVVWVuJyuaisrOTc
      uXNks1kaGhqw2+1UVlaKurt+v5+2tjYuXbrEmTNnUBSF999/n6NHj3Lx4kUAfD4fb775phh4
      mkwmamtrRXsmJia4desWJpMJi8XChx9+yNjYmDC+qqysxOl00tzczOXLlykUCrjdbmw2G1VV
      VcK2UEvVYKXo9tGjR4UoTpNS+/1+cV6fzycMvrRe0WKxcPLkSc6dOyfOa7fbCQQCVFRUfPt/
      nG3OKyWFkGUZWZafKU7TSnA+SyC22gpxs+dffZ3NCOUkScJisXyr8gNtBktV1Q21QboY7vl5
      JXoADZPJ9MzVQ6PRuGkZ8OPv28z5V19nM0K5lyFJfh5RXXOND5tla/+sKitBa9zirZrKXyZS
      NmrFK9UD6HwzdDHcWnQxnI7OM9ADQKeseaXGADrfnP995iaRRGZrG6GujAEMxq0dA6jKyhhg
      o0GAHgDbjIlIUp8Feg62NAVKJBJ88sknnDlzhuvXr5PL5YQwbnJy8mudM5lM8uDBg+c+bnJy
      ks8//1yoLyVJ4saNGwwMDHytdmyGWCzG7du3v9axExMTm65RrPN0tjwAAN577z38fj+/+c1v
      KBaLzM/Pk06nxars4uKiWAGVZVlYksBfSxOtLkfk8XjE3LlmJqUdv/r9q1dVY7EYN27cECvQ
      iUSCq1evCtMs7XraebXz5PN5oTpdr22a2lSW5TXX1ko0LSwskEqlyGazQj0qSRL5fH6NHKJU
      KgllLEBFRcWWz7JsB7Y0BdJkC36/H6vVyp07d9ZIiFOpFF988QV+vx9VVXn99de5evWquAmP
      Hj1KOBwmlUqhKAoHDx7EbDbz6NEjampq+M///E9R7nTnzp3s3LmTa9euicDq6Ohg586dwMqc
      fnt7O8PDw9TU1LC4uIjL5cJisZBIJOjv7+ftt98mmUzS398vCuMVi0XMZjPvvPMOd+/exWaz
      EY/Heffdd0mlUoTDYSKRCJ2dncRiMfL5PMvLyxw8eBCr1crExASqqrK0tMQ777yD2Wymq6uL
      iooK8vk87733Hnfv3hVFt00mE2+++Sazs7NUVFTg8/m26s+3LdjSHkBVVR48eMC///u/86tf
      /YojR46sWXzSCkm3t7ezuLjI5OQkU1NTNDY2cvr0afx+PxMTEzQ0NHDq1ClCoRDZbFZUgDca
      jXz/+9/n6NGjaywL33rrLerq6shms2va097eztzcHOl0mpGREXbv3o3BYCCfz4uULJ/PMz09
      jc/n48MPP6S6upq2tjaCwSCdnZ3U1dVhtVrp6elheXmZ+/fv8/bbb9Pe3s7+/ftpamrC5/Nx
      69YtAJqbm/n+97/Pe++9x+XLl/F6vXR2dtLQ0EA0GmViYoJUKsWxY8f4/ve/j9lsJpVKsbi4
      SDKZfHl/rG3KlvcAe/bs4a233iIej/Pll19SV1cnfp5IJLDb7SwuLhIKhfB6vRw7doz5+XnC
      4TBHjhzh+PHjQvKs+WxqmM1mLBaLWP3N5XJ4PB6hCH0cs9lMVVWVyPsrKyuZmZlZt+1Go1E4
      Qx86dIhYLEZXVxehUIhcLicWX/bt20dtbS2ZTIYbN25QUVFBNpsVQjij0YjFYsHr9SLLMiMj
      I4yNjVFdXU2hUECSJLESvNqHSOfFsOU9QCqVYmpqinQ6/YRCs62tjWKxiN/vp76+HofDgcfj
      YefOnTidTubm5nA4HOzcuZOqqqpnDpwDgQDT09OEw2GmpqbWbDfUaG1tpbu7mz179ogVVZvN
      hsFgIBKJCA1+PB7nypUrNDY2kkwmiUQimM1m8YTX0CQM2WyWTCZDY2MjlZWVIgCz2SwzMzN0
      d3fT0NAgdsU1Nja+0CqWOutj+uUvf/nLrWxAMplkdnaWxcVFDh48SCgUwmg0EgwGaWhoIBKJ
      MDc3R6FQoKqqiqGhIZLJpHBTHhsbIxqNIkkSHR0duFwusVHFaDSK/zscDurq6spkQcsAABEK
      SURBVDCbzUxOTpLJZKiqqhIqUK24tt/vx2w2s3PnTqxWK263m1AoRLFYZG5ujmw2y44dO8RT
      uFgskslkaGpqYmlpiWg0islkorW1VShYtV6nWCwSiUQoFos0NjZSV1dHOp0WhTROnTol0rpE
      IoHf76elpUW0SyvkHQgEsNvt+P3+NYpQRVH4rHuMpcxWu0L87fDKa4G0/bBGo1FsLZRlGaPR
      uMaWUPt+IxYXF+nt7aW2tpbBwUFOnTpFQ0PDptshy7KoRL8e2v5jra2bOcfjvx+szPpodh7P
      Y6moq0Gfn1c+AF4kqqqSSCRYXFykrq4Ol8u1rYpLSJLEn2+MkNhqXyAVZEXeel8gWcFg1K0R
      ywZdDboWXQ2qo/MMdC3QNkNRVFa2pGxtGxRV/UtbtrYdGDZuhx4A24z/8X9/qg+CnwM9BdIp
      a8q2BxgeHqarqwubzUZlZSUHDx6kpqbma80KacXsOjs71/25LMtcv36dkydPfq2CGZlMhmvX
      rnHy5Ek8Hs9zH6/zdMq2B0in03R0dPD3f//3tLS08OWXXwrVZSqVElIFTTiXSqWeMOAtlUqi
      sLbmD5pMJp8w61VVlfn5+TUSBq0C5Wrz36WlpTWGuJpidHl5WfiXyrLMo0ePiMfjuiTiBVC2
      PQCsaIOWlpYoFApCcXrx4kUcDgfz8/Ps27cPl8tFV1eXKH164sQJTCYTqVSK3/72tzQ1NTE7
      O8uuXbuYmZmhq6uL1tZWent7+d73vreud0+xWOTs2bPCIOvw4cM4nU4uX77Mjh076Onp4Yc/
      /CH9/f1MTk4SCASIxWLIssznn38uFKetra0cPHhwW61lvGzKtgdQVZVIJMLAwAC9vb1CJnHo
      0CGxqjwxMUE2m6VUKtHQ0CBufljxJe3s7OTdd9/l8OHDGI1Genp6CAQCuFwuMpkMc3Nz6157
      cnKSVCpFMBgkFArR09PDtWvXaGhowOPxkMvlCIfDjI6O8uGHH3Ly5EmCwSDZbJbx8XECgQA+
      n4+RkZEXagtfjpRtAGhK1Pfee49//Md/ZGBggMXFRS5fvkxraystLS2oqkpbWxtvv/02CwsL
      fPLJJ+TzeWBFFu33+9ecs1Qq4fF4cLlcnDhxYo3b3GokScLpdGK32wmFQnznO99BURQ8Hg92
      u52TJ08SCoVEXWIt1VEUBYvFgtPppKmpSa8f/AIo2xRI8/ZcXFxElmXcbrfI9+fn55mdncVo
      NBKJRJifn8dqtSJJksjPm5ubuXbtGu3t7UxOTtLU1MTevXvp7++nVCqJYtgaCwsLfPnllzgc
      DlpaWiiVSkxOToq6wfv372dwcJCGhgYMBgOBQACz2Sw2AC0vL+N0OvF6vYyPjwsbRp1vRtlK
      IVKpFAsLC8L6XHOgHh8fR5IkbDYbbrcbs9ksBrCBQIBgMCgMa8fHx8WSfzAYxOFwMDU1RTab
      xe12U1tbi81mExVntNrCtbW1pNNpotEoZrOZ6upqPB4P4+PjFAoFKioqqK2tJZvNEolEMBqN
      uN1uqqurSaVSzM/PYzAYqKqqIhAIiDGALoZ7fso2ALYjegA8P3oAbCMkSWLo0SK54tYOjLU9
      29+kSPiLoFQqYTQYMZqePk7SA2AboatB16KrQXV0nkHZzgJtV8IzcYrS1laRUVUVqSRhtWxs
      L/9tI5UkjEYjJuPTN+boAbDN+L9+95U+CH4O9ABYhVZ3OJPJYLfbcbvdXzuf1nQ8qVQKq9WK
      1+vd8txc50n0AFhFLBbj+vXrombXgQMHnrqauxHa3uPr169jtVpRFIU33nhDr/D4CqIHwCoG
      BgYIBAK8/vrr5PN5jEYjhUKBeDyOoii43W7cbrewOIzFYoRCIeHQ1tbWhtlsRlEUenp6qK6u
      5ujRo6JWWSwWw+fziQDx+/2kUikMBgOSJFFRUYEkSeRyOdxuN5IkkclkMBqNVFZWYjQaiUaj
      ZLNZisUira2twrNI5+ux5b5ArxJGo5HBwUGSySR+vx+v18vc3Byjo6NkMhlu3bpFa2srf/jD
      H1haWiKbzXLlyhV8Ph9DQ0NUVlbi8XiQJIm7d+/S2dmJ2+3GarWSyWQ4e/YsLS0t5PN5/vSn
      P7Fjxw4+/vhjJicnURSFZDLJhQsXSCaTBAIBRkdHyeVyDA8PE41G8Xq9/PrXv8bv9/Po0SPy
      +Tx1dXUiAHRfoOdH7wFW0djYyDvvvMPMzAznz5/n9ddfFyrM6elpFhYWWF5eJhAIcOLECQqF
      AjabjePHj1MqlZ5wmttMzm8ymXj//ffxer3cvXuXlpYW3nnnHUwmE7lcjt7eXpaWlsjlcuzb
      t4+dO3dy8uRJHjx4QDqd/rY+irJBH5WtQpIkqqqq6Ozs5MSJE4TDYT777DNaW1v5yU9+QjAY
      3NQmFJPJREVFBTMzM6iqKo7RAkIz0AJwu934fD4MBgMmk4mamhrMZjNLS0t0dXXxd3/3d7z/
      /vvCFOx5zbJ0NkbvAVYxNjbGjRs3cDgcZLNZ3njjDSYmJrhz5w53794lHo9v6jwmk4mDBw9y
      4cIF7t27hyRJfPDBBxiNRi5dukQikSCV2niq0mw2k81mOXfuHIlEQhTQ1nmx6FKIVWgalkKh
      gMPhENaL2WwWq9WK2Wx+5tN3teXh6mMtFguKopBOp3E6nWvsEVcfo32vqiqSJFEoFHA6nWvS
      Ke3nj19TF8M9P3oPsArNhny1iEszzf0653r8WJPJhNfr3fCY1f+2Wq1PLdatp0EvBr0H2EZI
      kkS+KKNuWBv920dVFYqShM1q29J2SNJfpBAbeJTqPcA2w+WwbvmK84oa1IDdvrUBUCwadDWo
      js5G6D3ANuOz7lFS2eKWtkHzL9royfsy0OosbNQj6gGwzTh7c0SfBXoO1g2NUqkkFnEURWF6
      elrMgWuuCZtlZmaGQmHjpXlJkhgbG9vQ46ZQKBCNRsX3iURC1Bl+1YlEIqL+8NPIZrPcuXOH
      3t5ecrkciqIIicTExASLi4svqbXlxboBoKoq169fF6ZQZ8+e5d69e6iqytjYmKht+7QvzSYQ
      Vm7UUqn0xM9Wf+XzeWEn8vjPNFKpFHfv3hXfh8NhwuHwuu/fqG0bfa1eoV3dXu31zXw9/jlq
      N7BWXO/xzwdWvD/Pnz+P2WxGVVX6+/tRVVXYHw4MDDA9Pf0i/t46j7FuCmSxWPB4PDx69Ij6
      +nqMRqOwBhkbG+Po0aMsLi6KXsLpdNLe3s7AwIDwsmxpaWHHjh0i/5qenmZmZkZYhhw4cIB0
      Or2mUHShUGB8fJzW1lZUVWV0dJR9+/YBKzMLq3sSraKk5qKmyQR27txJMpkUvZRmaTg2NobR
      aMRms9HW1sb8/LywRtSK7ZlMJhRFYdeuXaTTacbGxsjn81itVg4dOkSxWCQcDmO32ykWixw8
      eFA83WVZJhQKiTKv2nslSWJycpI9e/aIQM/n81RWVtLR0YHBYCAWi5FKpejo6BB5c6lU2vIc
      uhx46uhA87yMRCLs2LEDgOXlZfL5PD6fT3jVeDwebty4QSaT4e7du3i9XlpbW7l9+zayLNPd
      3U0qlWJ8fJxYLEZLSwvT09NEo1Fu3rxJoVDA6/ViNpvJ5/P09PSQz+fJZrN89dVXa9o0PT3N
      mTNnOHPmDD09PeKmdzqd+Hw+RkdHmZ6epq+vT5xXKz7ndrtxuVz09fURj8fp7e3l2rVrVFRU
      YDabRcX6qakpRkdHmZ2dZWZmhubmZqLRKAsLC/T09JDJZPB4PAwMDFAqlTCZTOLz6OrqAlae
      8uPj4wwPD+P3+8X+gr6+PkqlErt27eLevXsihaupqaGtrY1/+7d/4/r165RKJWRZ5tatW+uW
      ctV5cTz1EVNTU8PDhw+5d+8ep0+f5v79+/T09OByubBYLESjUXGjaaU/7XY7u3fvplQqiRtU
      XMhspqWlhcbGRmE+VSwWOXLkCIqibErrUl9fz49+9CMAbty4gcFgoFAoMDw8TCqVYmZmhh07
      dlBfX09vby+qquJyucjn8wwMDJDNZpmamuLkyZNYrVbeffddmpqayOfzjI6Okk6niUQiBAIB
      PB4PTU1NNDc3Mz09TalUIpfL8frrr+P1enG73SiKQiwW48GDB2QymTWV25eWlti9ezeNjY3M
      zc2hqirT09M4HA7C4TAmk0nInq1WK6dPn+b48ePcvn2b3/72t3z44Yff5O+qs0me2gM4HA4k
      SSIWi1FZWUl7ezv9/f3CD/Pu3bu89tpr/PSnP11j0fe0JfrHVYzaJhDNa1N7mmurdlru/fg5
      TCbTGuuPyclJHA4HH330EQcOHMBoNLJ3715+/vOfAytP3aGhIZqbm/nxj39Ma2srsBKQmrZn
      YmICg8HAT3/6Uzo7O9f9HbSeJJFIkMvlWF5eJp1O8+DBA773ve/xox/9aM2OL00HBAj3OafT
      SUtLC52dnXzwwQfU19cDK+mO9gA5ceIE+Xz+iaLhOt8OT+0BbDYboVBIpAg1NTU4nU6CwSBm
      s5n6+nquXLkiRF1ms5lgMAis3KjBYFDY91mtVioqKnA4HBgMBrxeLy6Xi/b2dj755BNxc7lc
      LoLBIBcuXCCdTq+plG6xWNaY0Wo3W2VlJX19ffzud78TY4+rV6+SSCSQJIm9e/diNpvp7e3l
      /v375HI5bDYbXq9X6Gzq6uq4efMm//3f/002m6WzsxOn0ylycI/Hg9Pp5OjRo1y+fBlFUcjn
      8yL1unTpErlcTqQ6AO3t7Vy8eJHx8XGSySRvvvkmJ06c4OzZs/T09GCxWPjggw+w2Wxks1ku
      XLhAJpNBlmVx/erqagwGA36/H5fLxfLyMl1dXbz99tt0d3dTU1NDe3v7C7wdyo+vrQVSVVVs
      9fu6gzVVVYV5kSZA0wa7Vqt1U3VmNdUkIG5orW1GoxGr1SquYzKZntpWSZJQFAWr1bpuD6Ao
      CiMjI2KjytDQED/+8Y8xm81iY8zjCy7a77L6Z4qiIEkSFovlifcXCoUN2/gsdDXo86OL4TaJ
      NlM1MTEBrEwS+P3+V0qVKUkS/+s3N5iNbfVOMRVV3XrF6kpaDWwgDtQDYBuhWyOuZTPWiHoA
      bCMkSRL6l61EWxR8FQLxWVtI9ZWWbYbV+mrIoUul0lM387wsNrMfQJdD65Q1egDolDV6CrSN
      WL3RfivR1oW2ms18HvogWKes0VMgnbJGDwCdsmbrEzWdF046nebu3btiH8PLWpDS6hkPDAxg
      MBjYv3//llnCaxuKJiYmOHz48FOnQvUeYJtRLBa5du0aDoeDUqnEzZs3N+Vn+iJYXl7miy++
      wO/3U1FRwWefffZSrrsexWKRW7du8dlnn22orNUDYJuRyWTI5/Ps27ePAwcOMDU19dKu7XK5
      +OEPf8iePXuora195l7wb5Ph4WFMJhOVlZUbPgD0ANhmyLIs7B21XuBl3YjaXo2FhQU+/fRT
      Dh48+FKuuxot9Xn48CHHjx9/pqJYD4BthsFgEJv4NZOBlzUnrygKDx8+5PLly7z33ntiP/fL
      pFQqce3aNSRJor+/n2g0yv3795/6ENAHwdsMq9VKNpslkUiQzWaFE/XLIJVK0d/fz+nTpwkG
      gyiKIjY7vSyMRiOHDx8mlUqJavUul+up+ig9ALYZFRUV7N+/nwsXLmAwGDh16tRLu7YkSWSz
      WT755BNgZUzw0UcfvVRRnMlkoqmpCVjpDeLxOK2trWscv1ejrwRvQ7Rdcs/SwuvoAaBT5uiD
      YJ2yRg8AnbJGDwCdskYPAJ2yRg8AnbJGDwCdskYPAJ2yRg8AnbJGDwCdskYPAJ2yRg8AnbJG
      DwCdskYPAJ2yRg8AnbJGDwCdskYPAJ2yRg8AnbJGDwCdskYPAJ2y5v8HWSh7jvlRWcoAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='164' name='Wicket Margin' width='192'>
      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
      SKbMjqTSUbsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Wins per Team' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
